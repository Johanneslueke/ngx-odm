var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/NgxKintoModule.html",[0,0.845,1,1.908]],["body/modules/NgxKintoModule.html",[0,0.959,1,3.468,2,1.418,3,0.534,4,0.728,5,0.728,6,3.19,7,1.245,8,2.446,9,4.118,10,3.19,11,3.034,12,1.238,13,3.19,14,1.411,15,0.052,16,0.578,17,0.578,18,0.64,19,1.946,20,1.62,21,1.83,22,3.387,23,2.796,24,3.19,25,3.19,26,0.947,27,4.118,28,2.573,29,2.446,30,2.796,31,1.245,32,3.096,33,2.796,34,3.19,35,1.862,36,0.534,37,0.627,38,1.082,39,2.404,40,1.62,41,2.166,42,3.19,43,2.796,44,1.862,45,0.959,46,1.418,47,2.166,48,2.166,49,1.862,50,0.029,51,0.038,52,0.029]],["title/injectables/NgxKintoService.html",[32,1.908,53,0.963]],["body/injectables/NgxKintoService.html",[3,0.554,4,0.755,5,0.755,11,2.944,12,1.267,14,1.134,15,0.052,16,0.592,17,0.592,18,0.592,19,1.906,26,0.912,31,1.291,32,2.862,33,2.246,36,0.777,37,0.65,38,0.869,45,1.267,50,0.03,51,0.038,52,0.03,53,1.445,54,1.931,55,2.246,56,0.65,57,2.862,58,2.355,59,1.291,60,3.308,61,3.308,62,2.246,63,3.308,64,1.931,65,3.399,66,2.851,67,4.215,68,3.308,69,4.215,70,1.47,71,1.68,72,2.246,73,3.308,74,1.931,75,4.215,76,3.308,77,3.308,78,3.308,79,3.308,80,1.931,81,3.308,82,1.134,83,2.668,84,3.308,85,2.246,86,3.308,87,3.308,88,3.308,89,3.308]],["title/interfaces/NgxRxdbCollectionConfig.html",[90,1.249,91,0.552]],["body/interfaces/NgxRxdbCollectionConfig.html",[3,0.54,4,0.736,5,0.736,15,0.052,16,0.452,17,0.702,18,0.679,19,1.952,26,0.634,36,0.838,50,0.029,51,0.038,52,0.029,56,0.634,90,2.036,91,0.901,92,1.882,93,1.882,94,2.036,95,2.42,96,2.105,97,1.887,98,1.617,99,2.42,100,1.258,101,2.105,102,2.675,103,0.54,104,2.189,105,1.433,106,1.882,107,1.217,108,2.189,109,2.189,110,1.788,111,0.847,112,1.637,113,2.326,114,2.189,115,1.637,116,2.189,117,1.433,118,2.189,119,1.433,120,2.189,121,2.42,122,2.42,123,1.882,124,0.969,125,1.433,126,1.882,127,1.637]],["title/classes/NgxRxdbCollectionCreator.html",[37,0.552,128,1.908]],["body/classes/NgxRxdbCollectionCreator.html",[3,0.418,4,0.57,5,0.57,7,1.856,8,2.045,12,1.572,14,1.197,15,0.051,16,0.644,17,0.644,18,0.764,19,1.571,20,1.268,21,1.11,26,0.687,36,0.768,37,0.491,38,1.058,50,0.023,51,0.032,52,0.023,56,0.491,59,0.974,70,1.552,71,1.268,91,0.857,96,1.773,97,1.571,100,1.571,103,0.418,106,1.458,107,1.114,110,1.363,113,1.773,128,2.371,129,1.268,130,3.076,131,1.696,132,2.817,133,3.248,134,4.028,135,4.028,136,4.028,137,4.217,138,4.362,139,2.214,140,3.493,141,3.493,142,3.493,143,1.197,144,2.498,145,2.498,146,2.498,147,2.498,148,2.498,149,2.498,150,2.498,151,4.028,152,2.498,153,2.498,154,3.493,155,2.498,156,2.045,157,2.498,158,1.268,159,2.546,160,2.371,161,2.498,162,2.371,163,2.045,164,2.498,165,2.498,166,2.817,167,2.014,168,3.248,169,2.014,170,2.498,171,2.498,172,2.498,173,2.498,174,2.498,175,2.498,176,2.498,177,2.014,178,2.498,179,2.498,180,2.014,181,2.498,182,2.498,183,2.498,184,2.498,185,2.498,186,2.498,187,2.498]],["title/injectables/NgxRxdbCollectionService.html",[53,0.963,188,1.249]],["body/injectables/NgxRxdbCollectionService.html",[3,0.447,4,0.293,5,0.293,7,0.82,12,1.504,14,1.648,15,0.052,16,0.675,17,0.681,18,0.675,20,1.356,21,2.176,26,0.759,31,0.501,36,0.215,37,0.252,38,1.36,45,0.386,46,0.934,50,0.012,51,0.019,52,0.012,53,0.721,54,0.749,56,0.252,57,1.427,58,1.729,59,0.82,62,0.872,64,0.749,70,1.791,72,1.813,82,0.721,91,0.607,95,1.559,98,0.82,99,2.254,103,0.447,105,0.934,107,1.212,124,0.632,127,0.652,130,2.939,132,1.035,133,1.035,139,1.356,143,0.915,158,0.652,163,2.118,188,0.934,189,1.284,190,2.67,191,3.087,192,2.102,193,3.087,194,3.365,195,2.102,196,2.102,197,2.102,198,2.102,199,3.087,200,2.102,201,2.102,202,2.102,203,1.559,204,1.559,205,1.427,206,2.102,207,2.102,208,1.372,209,1.284,210,1.567,211,1.284,212,2.102,213,1.284,214,1.284,215,2.102,216,1.427,217,2.102,218,2.102,219,2.102,220,1.227,221,2.102,222,2.102,223,3.581,224,1.284,225,2.102,226,4.173,227,1.284,228,2.62,229,1.284,230,2.102,231,1.284,232,2.102,233,1.284,234,4.398,235,2.102,236,1.284,237,2.102,238,1.284,239,2.102,240,1.284,241,2.102,242,1.284,243,1.284,244,2.102,245,1.284,246,2.102,247,1.284,248,2.102,249,1.284,250,2.102,251,2.484,252,2.833,253,1.284,254,1.284,255,2.489,256,1.284,257,0.652,258,2.153,259,2.153,260,2.102,261,1.284,262,2.102,263,1.284,264,2.102,265,1.284,266,1.035,267,1.284,268,1.284,269,2.102,270,1.035,271,1.227,272,1.284,273,1.284,274,1.284,275,2.67,276,0.749,277,1.284,278,3.658,279,1.284,280,0.872,281,0.749,282,0.872,283,1.284,284,1.284,285,2.102,286,1.284,287,0.872,288,1.284,289,1.284,290,1.284,291,1.035,292,0.749,293,1.284,294,1.284,295,1.284,296,1.284,297,1.284,298,2.102,299,2.102,300,1.284,301,1.284,302,1.284,303,1.035,304,1.284,305,2.102,306,3.406,307,1.284,308,3.862,309,1.695,310,1.284,311,1.284,312,0.934,313,1.284,314,1.284,315,1.695,316,2.102,317,1.284,318,1.284,319,3.406,320,1.695,321,1.284,322,1.284,323,2.102,324,2.102,325,1.035,326,1.284,327,1.284,328,1.284,329,1.284,330,1.284,331,1.284,332,1.284,333,1.284,334,1.284,335,1.284,336,1.284,337,2.67,338,1.284,339,1.284,340,1.284,341,1.284,342,1.284,343,1.284,344,1.284,345,1.284,346,1.284,347,1.284,348,1.284,349,1.284,350,1.284,351,1.284,352,1.284]],["title/interfaces/NgxRxdbConfig.html",[90,1.249,111,0.738]],["body/interfaces/NgxRxdbConfig.html",[3,0.546,4,0.744,5,0.744,15,0.052,16,0.457,17,0.705,18,0.586,19,1.959,26,0.641,36,0.841,50,0.03,51,0.038,52,0.03,56,0.641,90,2.047,91,0.821,92,1.902,93,1.902,94,2.047,95,1.902,96,2.119,97,1.271,98,1.629,99,2.437,100,1.271,101,2.338,102,2.688,103,0.546,104,2.212,105,1.448,106,1.902,107,1.219,108,2.212,109,2.212,110,1.797,111,1.096,112,1.654,113,2.338,114,2.212,115,1.654,116,2.212,117,1.448,118,2.212,119,1.448,120,2.212,121,2.437,122,2.437,123,1.902,124,0.979,125,1.448,126,1.902,127,1.654]],["title/interfaces/NgxRxdbDump.html",[90,1.249,115,1.427]],["body/interfaces/NgxRxdbDump.html",[3,0.505,4,0.689,5,0.689,15,0.052,16,0.662,17,0.746,18,0.706,19,1.55,26,0.593,36,0.821,50,0.028,51,0.036,52,0.028,56,0.593,90,1.973,91,0.781,92,1.762,93,1.762,94,1.765,95,1.762,96,2.017,97,1.178,98,1.55,99,2.319,100,1.178,101,2.017,102,2.591,103,0.505,104,2.05,105,1.342,106,1.762,107,1.248,108,2.05,109,2.05,110,1.912,111,0.793,112,1.533,113,2.254,114,2.05,115,2.017,116,3.203,117,2.096,118,3.203,119,2.096,120,3.203,121,2.753,122,2.319,123,1.762,124,0.907,125,1.342,126,1.762,127,1.533]],["title/classes/NgxRxdbError.html",[37,0.552,353,1.908]],["body/classes/NgxRxdbError.html",[3,0.54,4,0.736,5,0.736,12,1.246,14,1.105,15,0.052,16,0.452,17,0.582,18,0.643,20,1.637,36,0.81,37,0.634,38,1.271,46,1.842,50,0.029,51,0.038,52,0.029,56,0.634,59,1.258,74,2.675,82,1.421,94,1.842,96,2.105,107,1.046,124,1.246,125,1.842,129,1.637,159,2.675,291,2.6,292,1.882,312,1.842,353,2.815,354,2.6,355,5.004,356,4.146,357,3.224,358,3.224,359,3.224,360,2.6,361,3.343,362,3.224,363,3.224,364,4.146,365,1.882,366,2.105,367,2.189,368,2.6,369,3.224,370,4.146,371,3.224,372,3.224,373,2.6,374,3.224,375,3.224,376,3.224,377,3.224,378,3.224,379,3.224,380,3.224,381,3.224,382,3.224,383,2.6,384,3.224,385,3.224,386,3.224,387,3.224,388,3.224]],["title/modules/NgxRxdbFeatureModule.html",[0,0.845,389,1.64]],["body/modules/NgxRxdbFeatureModule.html",[0,1.433,2,1.711,3,0.385,4,0.525,5,0.752,8,1.673,15,0.052,17,0.323,18,0.59,22,2.614,23,2.614,26,0.937,29,2.259,30,2.614,31,0.898,36,0.645,37,0.757,38,1.011,39,1.924,40,1.955,41,2.238,43,1.562,44,1.924,45,0.991,46,1.464,47,1.562,49,1.343,50,0.021,51,0.03,52,0.021,59,0.898,64,1.343,71,1.168,74,1.343,82,0.789,91,0.827,103,0.552,111,1.323,129,1.168,139,1.168,143,1.441,156,1.168,158,1.168,159,1.343,163,1.168,188,1.711,208,1.022,210,2.351,216,2.614,276,1.343,280,1.562,281,1.924,282,1.562,287,1.562,365,1.343,389,2.248,390,1.562,391,1.855,392,2.454,393,2.855,394,1.924,395,2.855,396,2.658,397,2.454,398,1.855,399,1.855,400,1.562,401,1.855,402,1.855,403,2.658,404,2.614,405,3.105,406,1.855,407,2.614,408,1.343,409,1.562,410,2.238,411,1.855,412,1.855,413,1.855,414,1.343,415,1.855,416,1.977,417,1.855,418,1.855,419,1.855,420,1.855,421,1.855,422,1.855,423,1.855,424,1.855,425,3.105,426,2.658,427,1.855,428,1.855,429,1.562,430,1.343,431,1.855,432,1.855,433,2.658,434,3.391,435,2.658,436,2.658,437,2.658,438,2.658,439,2.658,440,2.238,441,1.924,442,1.343,443,1.343,444,1.855,445,1.855,446,1.855,447,1.855,448,1.855,449,1.343,450,1.673,451,1.855,452,1.855,453,1.855,454,1.855,455,1.343,456,1.855,457,1.855]],["title/modules/NgxRxdbModule.html",[0,0.845,416,1.249]],["body/modules/NgxRxdbModule.html",[0,1.447,2,1.414,3,0.367,4,0.5,5,0.726,7,0.855,8,2.087,12,0.956,14,1.09,15,0.052,16,0.447,17,0.526,18,0.639,21,1.414,22,2.964,23,2.791,26,0.924,29,2.216,30,2.543,31,0.855,36,0.627,37,0.736,38,0.984,39,1.857,40,1.902,41,2.16,43,1.488,44,1.857,45,0.956,46,1.414,47,1.488,49,1.279,50,0.02,51,0.029,52,0.02,59,0.855,64,1.279,71,1.112,74,1.279,82,0.751,91,0.895,103,0.533,111,1.341,129,1.112,139,1.112,143,1.561,156,1.112,158,1.112,159,1.279,163,1.112,188,1.665,208,0.974,210,2.312,216,2.543,276,1.279,280,1.488,281,1.857,282,1.488,287,1.488,365,1.279,389,1.857,390,1.488,391,1.767,392,1.857,393,2.791,394,1.279,395,2.791,396,1.767,397,2.399,398,1.767,399,1.767,400,1.488,401,1.767,402,1.767,403,2.566,404,2.543,405,3.021,406,1.767,407,2.543,408,1.279,409,1.488,410,2.16,411,1.767,412,2.566,413,2.566,414,1.857,415,2.566,416,2.024,417,2.566,418,2.566,419,1.767,420,1.767,421,1.767,422,1.767,423,1.767,424,1.767,425,3.021,426,2.566,427,1.767,428,1.767,429,1.488,430,1.279,431,1.767,432,1.767,433,2.566,434,3.315,435,2.566,436,2.566,437,2.566,438,2.566,439,2.566,440,2.16,441,1.857,442,1.279,443,1.279,444,1.767,445,1.767,446,1.767,447,1.767,448,1.767,449,1.279,450,1.615,451,1.767,452,1.767,453,1.767,454,1.767,455,1.279,456,1.767,457,1.767,458,2.191,459,2.191,460,2.191]],["title/injectables/NgxRxdbService.html",[53,0.963,210,1.427]],["body/injectables/NgxRxdbService.html",[3,0.187,4,0.254,5,0.254,7,0.73,8,1.437,12,1.342,14,1.356,15,0.052,16,0.603,17,0.636,18,0.555,19,0.435,20,0.95,21,1.816,26,0.891,31,0.435,35,1.092,36,0.187,37,0.219,38,1.173,44,1.992,45,1.144,46,1.691,49,0.651,50,0.01,51,0.017,52,0.01,53,0.641,54,0.651,56,0.219,57,1.27,58,2.132,59,0.943,62,0.757,70,2.112,72,1.921,80,1.992,83,1.949,85,0.757,91,0.671,97,0.73,98,1.415,100,0.435,102,0.651,103,0.313,107,1.146,111,0.896,113,1.601,115,1.733,117,0.495,119,1.611,124,0.562,128,0.757,139,2.334,143,0.97,156,0.566,158,0.566,163,2.334,177,0.899,194,2.282,203,1.092,204,1.092,208,1.866,210,0.95,220,0.651,228,0.651,252,1.641,255,3.191,257,1.227,258,2.924,259,2.752,266,1.509,270,0.899,271,2.309,303,1.949,309,2.543,312,0.831,315,0.899,320,2.543,325,0.899,353,1.641,366,0.566,367,0.757,373,0.899,393,1.27,395,1.27,400,0.757,404,1.27,408,1.652,409,0.757,414,1.092,440,0.757,450,0.95,461,0.899,462,2.83,463,2.417,464,1.871,465,1.871,466,1.871,467,1.871,468,2.417,469,2.417,470,2.417,471,1.115,472,1.115,473,1.871,474,1.115,475,1.115,476,2.83,477,3.153,478,1.115,479,2.83,480,1.871,481,1.115,482,1.509,483,4.087,484,1.27,485,2.417,486,1.871,487,1.115,488,1.871,489,1.871,490,1.115,491,1.115,492,1.871,493,1.115,494,1.509,495,1.871,496,1.871,497,2.83,498,2.83,499,1.27,500,1.871,501,1.871,502,1.115,503,1.115,504,1.115,505,1.115,506,1.871,507,1.115,508,1.115,509,1.115,510,1.115,511,1.115,512,1.115,513,1.115,514,1.871,515,1.115,516,1.115,517,2.83,518,1.115,519,1.115,520,1.115,521,1.115,522,1.115,523,1.871,524,1.115,525,1.115,526,1.115,527,1.115,528,1.115,529,1.115,530,1.115,531,1.115,532,1.115,533,1.115,534,1.115,535,1.115,536,1.509,537,1.509,538,1.115,539,0.899,540,2.417,541,1.641,542,1.509,543,0.757,544,1.115,545,1.115,546,0.757,547,1.115,548,1.115,549,1.115,550,1.115,551,1.115,552,1.115,553,1.115,554,1.115,555,1.115,556,1.115,557,1.115,558,0.899,559,0.899,560,1.115,561,1.115,562,1.115,563,0.899,564,0.899,565,1.115,566,1.115,567,2.417,568,2.417,569,2.83,570,2.417,571,1.115,572,2.417,573,1.115,574,2.417,575,1.115,576,3.153,577,1.115,578,1.115,579,1.115,580,1.115,581,1.115,582,1.115,583,1.27,584,1.871,585,1.115,586,1.115,587,1.115,588,1.871,589,1.115,590,1.115,591,1.115,592,1.115,593,2.83,594,2.417,595,1.115,596,2.417,597,1.115,598,1.115,599,1.115,600,0.757,601,1.115,602,1.115,603,1.115,604,1.871,605,0.757,606,1.115,607,1.115,608,1.115,609,2.417,610,1.115,611,1.115,612,1.871,613,1.115,614,1.115,615,1.115,616,1.871,617,1.115,618,1.115,619,1.115,620,1.115,621,1.115,622,1.115,623,1.115,624,1.115,625,1.115,626,1.115,627,1.115,628,1.115,629,1.115,630,1.115,631,1.115,632,1.115,633,2.83,634,1.115,635,1.115,636,1.115,637,1.115,638,1.871,639,1.115,640,1.115,641,1.115,642,1.115,643,1.115,644,1.871,645,1.871,646,1.871,647,2.417,648,1.115,649,1.115,650,1.115,651,1.115,652,1.115,653,1.115,654,1.115,655,1.115,656,1.115,657,1.115,658,1.115,659,1.115,660,1.115,661,1.115,662,1.115,663,1.115,664,1.115,665,1.115,666,1.871,667,1.115,668,0.757,669,1.115,670,1.871,671,1.871,672,1.115,673,1.115,674,1.115,675,1.115,676,1.115,677,0.757,678,1.115,679,1.115,680,1.871,681,1.871,682,1.115,683,1.115,684,1.115]],["title/dependencies.html",[685,2.371,686,2.286]],["body/dependencies.html",[15,0.052,28,2.789,31,1.35,50,0.032,51,0.04,52,0.032,66,2.531,71,1.756,103,0.579,276,2.019,414,2.019,482,3.818,541,3.215,542,3.496,546,2.348,559,2.789,686,2.348,687,3.459,688,5.399,689,3.459,690,3.459,691,4.335,692,4.335,693,3.459,694,3.459,695,3.459,696,3.459,697,3.459,698,3.459,699,3.459,700,3.459,701,3.459,702,3.459,703,3.459,704,3.459,705,3.459,706,3.459,707,3.459,708,4.735,709,3.459,710,3.459,711,3.459,712,3.459,713,3.459,714,4.335,715,3.459,716,3.459,717,3.459,718,3.459,719,3.459,720,3.459,721,3.459,722,3.459]],["title/miscellaneous/functions.html",[723,1.054,724,2.715]],["body/miscellaneous/functions.html",[14,1.677,15,0.05,16,0.687,17,0.522,18,0.687,21,2.174,50,0.034,51,0.041,52,0.034,56,0.732,103,0.623,125,1.654,130,2.172,131,3.322,143,1.555,156,2.303,160,3.322,162,3.322,354,3.001,360,3.001,361,3.658,365,2.856,366,1.889,368,3.001,383,3.001,390,2.527,408,2.648,410,3.08,539,3.658,723,1.654,724,3.001,725,3.658,726,3.722,727,4.893,728,3.722]],["title/index.html",[56,0.466,729,2.371,730,2.371]],["body/index.html",[0,0.97,3,0.54,7,0.871,12,0.671,15,0.052,16,0.531,18,0.313,26,0.634,29,1.134,35,1.883,36,0.374,37,0.439,38,0.847,40,1.134,45,0.97,48,1.516,50,0.02,51,0.029,52,0.02,53,0.765,58,1.638,70,1.955,80,1.303,82,0.765,91,0.634,94,1.433,97,1.618,100,0.871,101,1.134,103,0.736,105,0.992,107,0.736,110,0.871,111,0.587,112,1.638,117,0.992,119,1.433,124,0.671,143,1.298,188,1.433,203,1.303,204,1.303,205,1.516,208,1.433,220,1.303,223,2.19,228,1.303,251,1.516,257,1.134,271,1.303,292,1.303,312,1.433,366,1.922,392,1.303,394,1.303,397,1.303,416,0.992,430,1.303,441,1.883,442,1.883,443,1.883,449,2.421,450,1.134,455,1.303,484,2.19,499,3.112,543,1.516,583,2.19,600,1.516,605,1.516,668,1.516,677,1.516,731,2.21,732,2.601,733,2.601,734,2.601,735,1.801,736,1.801,737,3.344,738,2.601,739,2.601,740,2.601,741,2.601,742,2.601,743,3.054,744,2.601,745,2.601,746,2.601,747,2.601,748,2.601,749,2.601,750,2.601,751,3.054,752,1.801,753,1.801,754,2.601,755,1.801,756,3.054,757,1.801,758,1.801,759,1.801,760,2.601,761,1.801,762,1.801,763,1.801,764,1.801,765,1.801,766,1.801,767,1.801,768,1.801,769,1.801,770,1.801,771,1.801,772,3.054,773,1.801,774,1.801,775,1.801,776,1.801,777,1.801,778,1.801,779,1.801,780,1.801,781,1.801,782,1.801,783,1.801,784,1.801,785,1.801,786,1.801,787,1.801,788,2.601,789,2.601,790,1.801,791,1.801,792,1.801,793,1.801,794,1.801,795,1.801,796,1.801,797,2.601,798,1.801,799,2.601,800,1.801,801,1.801,802,1.801,803,1.801,804,1.801,805,1.801,806,1.801,807,1.801,808,1.801,809,1.801,810,1.801,811,2.601,812,1.801,813,1.801,814,1.801,815,1.801,816,1.801,817,1.801,818,1.801,819,1.801,820,1.801,821,1.801,822,1.801,823,1.801,824,1.801,825,1.801,826,1.801,827,1.801,828,2.601,829,1.801,830,1.801,831,1.801,832,1.801,833,1.801,834,1.801,835,1.801,836,1.801,837,1.801,838,1.801,839,1.801,840,1.801,841,1.801,842,1.801,843,1.801,844,1.801,845,1.801,846,1.516,847,1.801,848,1.801,849,1.801,850,1.801,851,1.801]],["title/modules.html",[2,1.683]],["body/modules.html",[1,2.872,2,1.88,15,0.045,50,0.039,51,0.045,52,0.039,389,2.469,416,1.88,852,5.164,853,5.164,854,5.164]],["title/overview.html",[855,3.054]],["body/overview.html",[0,1.247,2,1.844,15,0.044,39,2.422,50,0.038,51,0.044,52,0.038,54,2.422,92,2.422,129,2.106,686,2.817,855,3.346,856,4.149,857,4.149,858,4.149,859,4.149,860,4.839,861,4.149,862,4.149,863,4.132,864,4.149]],["title/miscellaneous/typealiases.html",[723,1.054,865,3.367]],["body/miscellaneous/typealiases.html",[11,2.776,15,0.051,17,0.667,50,0.037,51,0.043,52,0.037,55,2.735,56,0.792,93,2.351,98,1.571,107,0.919,110,1.571,121,2.351,122,2.776,123,2.351,124,1.211,125,1.79,126,2.351,127,2.415,723,1.79,866,4.028,867,4.756,868,3.248]],["title/miscellaneous/variables.html",[723,1.054,869,2.715]],["body/miscellaneous/variables.html",[11,1.828,15,0.052,16,0.439,17,0.726,33,2.762,45,1.358,50,0.029,51,0.037,52,0.029,55,2.126,56,0.615,65,3.281,82,1.394,85,2.126,91,0.615,98,1.587,107,0.928,111,0.822,130,1.828,131,3.068,137,2.525,160,2.126,162,2.126,166,3.281,167,2.525,168,3.281,169,2.525,180,2.525,252,3.6,257,2.692,281,2.375,312,2.008,367,2.126,407,2.762,461,2.525,536,3.281,537,3.281,541,2.126,546,2.126,563,3.281,564,2.525,723,1.391,725,3.281,731,1.828,863,2.525,868,2.525,869,2.525,870,4.519,871,3.131,872,4.068,873,4.519,874,3.131,875,4.519,876,3.131,877,3.131,878,3.131,879,3.131,880,3.131,881,3.131,882,3.131,883,3.131,884,3.131,885,3.131]],["title/additional-documentation/rxdb.html",[103,0.397,886,1.912,887,1.912]],["body/additional-documentation/rxdb.html",[0,0.97,3,0.54,7,0.871,12,0.671,15,0.052,16,0.531,18,0.313,26,0.634,29,1.134,35,1.883,36,0.374,37,0.439,38,0.847,40,1.134,45,0.97,48,1.516,50,0.02,51,0.029,52,0.02,53,0.765,58,1.638,70,1.955,80,1.303,82,0.765,91,0.634,94,1.433,97,1.618,100,0.871,101,1.134,103,0.736,105,0.992,107,0.736,110,0.871,111,0.587,112,1.638,117,0.992,119,1.433,124,0.671,143,1.298,188,1.433,203,1.303,204,1.303,205,1.516,208,1.433,220,1.303,223,2.19,228,1.303,251,1.516,257,1.134,271,1.303,292,1.303,312,1.433,366,1.922,392,1.303,394,1.303,397,1.303,416,0.992,430,1.303,441,1.883,442,1.883,443,1.883,449,2.421,450,1.134,455,1.303,484,2.19,499,3.112,543,1.516,583,2.19,600,1.516,605,1.516,668,1.516,677,1.516,731,2.21,732,2.601,733,2.601,734,2.601,735,1.801,736,1.801,737,3.344,738,2.601,739,2.601,740,2.601,741,2.601,742,2.601,743,3.054,744,2.601,745,2.601,746,2.601,747,2.601,748,2.601,749,2.601,750,2.601,751,3.054,752,1.801,753,1.801,754,2.601,755,1.801,756,3.054,757,1.801,758,1.801,759,1.801,760,2.601,761,1.801,762,1.801,763,1.801,764,1.801,765,1.801,766,1.801,767,1.801,768,1.801,769,1.801,770,1.801,771,1.801,772,3.054,773,1.801,774,1.801,775,1.801,776,1.801,777,1.801,778,1.801,779,1.801,780,1.801,781,1.801,782,1.801,783,1.801,784,1.801,785,1.801,786,1.801,787,1.801,788,2.601,789,2.601,790,1.801,791,1.801,792,1.801,793,1.801,794,1.801,795,1.801,796,1.801,797,2.601,798,1.801,799,2.601,800,1.801,801,1.801,802,1.801,803,1.801,804,1.801,805,1.801,806,1.801,807,1.801,808,1.801,809,1.801,810,1.801,811,2.601,812,1.801,813,1.801,814,1.801,815,1.801,816,1.801,817,1.801,818,1.801,819,1.801,820,1.801,821,1.801,822,1.801,823,1.801,824,1.801,825,1.801,826,1.801,827,1.801,828,2.601,829,1.801,830,1.801,831,1.801,832,1.801,833,1.801,834,1.801,835,1.801,836,1.801,837,1.801,838,1.801,839,1.801,840,1.801,841,1.801,842,1.801,843,1.801,844,1.801,845,1.801,846,1.516,847,1.801,848,1.801,849,1.801,850,1.801,851,1.801]],["title/additional-documentation/kinto.html",[66,1.384,886,1.912,887,1.912]],["body/additional-documentation/kinto.html",[15,0.044,50,0.038,51,0.044,52,0.038,66,2.843,429,2.848,494,3.383,558,3.383,731,2.843,846,2.848,888,4.195,889,4.871,890,4.871,891,4.871,892,4.195]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{},"additional-documentation/kinto.html":{}}}],["0",{"_index":367,"title":{},"body":{"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["0.11.3",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":733,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["10000",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.0.13",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["14.0.2",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":864,"title":{},"body":{"overview.html":{}}}],["2.0.3",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":379,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["3",{"_index":863,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["409",{"_index":659,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["5.1.1",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["8d2089",{"_index":375,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["9.11.0",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["_collection",{"_index":284,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["_db",{"_index":73,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["_deleted",{"_index":351,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["_design",{"_index":314,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["_id",{"_index":347,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["_imported",{"_index":470,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["_imported(v",{"_index":575,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["_ngx_rxdb_imported",{"_index":564,"title":{},"body":{"injectables/NgxRxdbService.html":{},"miscellaneous/variables.html":{}}}],["_removebulkby",{"_index":190,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["_removebulkby(rulesobj",{"_index":213,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["_rev",{"_index":349,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["access",{"_index":399,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["accessors",{"_index":57,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["adapter",{"_index":541,"title":{},"body":{"injectables/NgxRxdbService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["adapteroptions",{"_index":77,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["add",{"_index":760,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["add(name",{"_index":804,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["addcollections",{"_index":597,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["additional",{"_index":886,"title":{"additional-documentation/rxdb.html":{},"additional-documentation/kinto.html":{}},"body":{}}],["addrxplugin",{"_index":515,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["addrxplugin(require('pouchdb",{"_index":540,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["addrxplugin(rxdbadaptercheckplugin",{"_index":550,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["addrxplugin(rxdbdevmodeplugin",{"_index":560,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["addrxplugin(rxdbjsondumpplugin",{"_index":549,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["addrxplugin(rxdbmigrationplugin",{"_index":551,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["addrxplugin(rxdbquerybuilderplugin",{"_index":548,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["addrxplugin(rxdbreplicationplugin",{"_index":552,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["addrxplugin(rxdbvalidateplugin",{"_index":547,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["ajax",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":866,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alldocs",{"_index":191,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["already",{"_index":47,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["angular",{"_index":499,"title":{},"body":{"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["angular.json",{"_index":826,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["angular/animations",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":28,"title":{},"body":{"modules/NgxKintoModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["angular/service",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":841,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["any).headers",{"_index":638,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["any).process?.env?.test",{"_index":556,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["anyobject",{"_index":127,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"miscellaneous/typealiases.html":{}}}],["anyvalue",{"_index":122,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"miscellaneous/typealiases.html":{}}}],["aot",{"_index":747,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["app",{"_index":414,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"dependencies.html":{}}}],["app.module.ts",{"_index":495,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["app_initializer",{"_index":404,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["append",{"_index":637,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["appinitstatus",{"_index":426,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["appinitstatus.donepromise",{"_index":451,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["applicationinitstatus",{"_index":403,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["appmodule",{"_index":441,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["args",{"_index":383,"title":{},"body":{"classes/NgxRxdbError.html":{},"miscellaneous/functions.html":{}}}],["array",{"_index":400,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["async",{"_index":139,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["atm",{"_index":824,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["attachments",{"_index":133,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{}}}],["auth",{"_index":569,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["authorization",{"_index":86,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["automatically",{"_index":828,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["automigrate",{"_index":134,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["available",{"_index":853,"title":{},"body":{"modules.html":{}}}],["await",{"_index":163,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["back_off_function",{"_index":634,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["background",{"_index":374,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["basic",{"_index":87,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["before",{"_index":498,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["behaviorsubject('all",{"_index":786,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["being",{"_index":423,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["boolean",{"_index":110,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxdb.html":{}}}],["bootstrap",{"_index":858,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":854,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["btoa(\"user:pass",{"_index":88,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["builder",{"_index":530,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["buildoptimizer",{"_index":825,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["bulk",{"_index":596,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["bulkinsert",{"_index":192,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["bulkinsert(data",{"_index":225,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["c[debug",{"_index":372,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["cache",{"_index":180,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/variables.html":{}}}],["cachereplacementpolicy",{"_index":135,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["call",{"_index":439,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["called",{"_index":445,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["catch",{"_index":320,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["change",{"_index":325,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["check",{"_index":520,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["checkschema",{"_index":521,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["checkschema(config.schema",{"_index":673,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["class",{"_index":37,"title":{"classes/NgxRxdbCollectionCreator.html":{},"classes/NgxRxdbError.html":{}},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["classes",{"_index":129,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"overview.html":{}}}],["col",{"_index":506,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["col.find(syncoptions.queryobj",{"_index":642,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["col.options",{"_index":629,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["col.options.syncoptions",{"_index":650,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["col.options?.syncoptions?.remote",{"_index":628,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["col.pouchsettings.ajax",{"_index":636,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["col.sync(syncoptions",{"_index":643,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collection",{"_index":208,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["collection.class",{"_index":535,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collection.class.ts",{"_index":131,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["collection.class.ts:27",{"_index":148,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:28",{"_index":152,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:29",{"_index":150,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:30",{"_index":147,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:31",{"_index":153,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:33",{"_index":146,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:34",{"_index":144,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:35",{"_index":149,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:36",{"_index":145,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:37",{"_index":142,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.class.ts:48",{"_index":155,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["collection.countalldocuments",{"_index":617,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collection.importdump(dumpobj",{"_index":623,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collection.name",{"_index":609,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collection.remove",{"_index":607,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collection.schema.hash",{"_index":621,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collection.service",{"_index":406,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["collection.service.ts",{"_index":189,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:108",{"_index":249,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:115",{"_index":233,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:121",{"_index":236,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:131",{"_index":240,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:135",{"_index":227,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:139",{"_index":265,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:143",{"_index":261,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:150",{"_index":253,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:158",{"_index":245,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:165",{"_index":247,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:175",{"_index":214,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:22",{"_index":267,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:25",{"_index":268,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:27",{"_index":211,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:37",{"_index":243,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:43",{"_index":229,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:56",{"_index":256,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:67",{"_index":231,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:73",{"_index":224,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:89",{"_index":242,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:93",{"_index":238,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collection.service.ts:99",{"_index":263,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collectioncreator",{"_index":610,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collectioncreators",{"_index":594,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collectioncreators[config.name",{"_index":674,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["collectionloaded",{"_index":193,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["collections",{"_index":119,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["collectionservice",{"_index":455,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["color",{"_index":376,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["common",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":27,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["completed",{"_index":799,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["config",{"_index":143,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["config.methods",{"_index":185,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["config.options.dumppath",{"_index":587,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["config.options.schemaurl",{"_index":671,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["config.pouchsettings",{"_index":184,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["config.schema",{"_index":670,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["config.statics",{"_index":186,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["configs",{"_index":666,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["configuration",{"_index":397,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["conflicts",{"_index":661,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["conforms",{"_index":773,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["console",{"_index":370,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["console.log(doc",{"_index":811,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["console.log.call",{"_index":371,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["const",{"_index":70,"title":{},"body":{"injectables/NgxKintoService.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["constructor",{"_index":59,"title":{},"body":{"injectables/NgxKintoService.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["constructor(@inject(ngx_kinto_options",{"_index":76,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["constructor(@optional",{"_index":42,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["constructor(config",{"_index":141,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["constructor(dbservice",{"_index":209,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["constructor(message",{"_index":356,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["constructor(options",{"_index":60,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["constructor(private",{"_index":787,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["constructor(public",{"_index":454,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["contact",{"_index":751,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["contents",{"_index":739,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["couchdb",{"_index":570,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["countalldocuments",{"_index":169,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/variables.html":{}}}],["countalldocumentsfn",{"_index":162,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":583,"title":{},"body":{"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["created",{"_index":600,"title":{},"body":{"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["createdat",{"_index":797,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["createrxdatabase",{"_index":516,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["createrxdatabase(dbconfig",{"_index":581,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["css",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["custom",{"_index":69,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["customheaders",{"_index":255,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["custoom",{"_index":179,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["dash",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":228,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["database",{"_index":80,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["date",{"_index":126,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"miscellaneous/typealiases.html":{}}}],["date.now",{"_index":809,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["datecreated",{"_index":808,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["db",{"_index":58,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["db.collection",{"_index":836,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["dbconfig",{"_index":579,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dbinitializerfactory",{"_index":410,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"miscellaneous/functions.html":{}}}],["dbinitializerfactory(rxdb",{"_index":728,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dbinstance",{"_index":565,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dbname",{"_index":78,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["dbservice",{"_index":212,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["dcouments",{"_index":817,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["declarations",{"_index":857,"title":{},"body":{"overview.html":{}}}],["deep",{"_index":361,"title":{},"body":{"classes/NgxRxdbError.html":{},"miscellaneous/functions.html":{}}}],["default",{"_index":257,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{}}}],["default_backoff_fn",{"_index":536,"title":{},"body":{"injectables/NgxRxdbService.html":{},"miscellaneous/variables.html":{}}}],["default_collection_methods",{"_index":168,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/variables.html":{}}}],["default_instance_methods",{"_index":166,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":274,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["defer(async",{"_index":308,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["define",{"_index":764,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["defined",{"_index":12,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["delay",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete",{"_index":605,"title":{},"body":{"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["deleteddocs",{"_index":345,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["demo",{"_index":737,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["demodb",{"_index":79,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["dependencies",{"_index":686,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":420,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["depth",{"_index":848,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["desc",{"_index":802,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["describe",{"_index":757,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["description",{"_index":391,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["design",{"_index":316,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["destroydb",{"_index":462,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["development",{"_index":553,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["doc",{"_index":319,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["doc.primary",{"_index":348,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["doc.remove",{"_index":341,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["doc.save",{"_index":340,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["doc.set(prop",{"_index":339,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["doc.update",{"_index":338,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["doc['_rev",{"_index":350,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["docs",{"_index":194,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["docs(queryobj",{"_index":230,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["docs.length",{"_index":344,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["docs.map(doc",{"_index":346,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["docs.rows.map",{"_index":318,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["docscount",{"_index":616,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["document",{"_index":772,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["documents",{"_index":788,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["don't",{"_index":752,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["done",{"_index":449,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["dumb",{"_index":830,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["dump",{"_index":483,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dump.timestamp",{"_index":657,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dump['timestamp'].tostring",{"_index":591,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dumpobj",{"_index":485,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dumpobj.timestamp",{"_index":664,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dumppath",{"_index":114,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["dumpwithhashes",{"_index":680,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dumpwithhashes.collections.hasownproperty(key",{"_index":682,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dumpwithhashes.collections[key].schemahash",{"_index":683,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["duplicate",{"_index":562,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["dynamic",{"_index":71,"title":{},"body":{"injectables/NgxKintoService.html":{},"classes/NgxRxdbCollectionCreator.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"dependencies.html":{}}}],["each",{"_index":833,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["enable",{"_index":543,"title":{},"body":{"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["encrypted",{"_index":117,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["end",{"_index":598,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["endkey",{"_index":313,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["ensure",{"_index":496,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["environement",{"_index":759,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["environment",{"_index":554,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["eq",{"_index":821,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["error",{"_index":46,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["error.status",{"_index":658,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["example",{"_index":842,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["execute",{"_index":892,"title":{},"body":{"additional-documentation/kinto.html":{}}}],["executed",{"_index":447,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["existing",{"_index":677,"title":{},"body":{"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["exists",{"_index":497,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["export",{"_index":36,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["exports",{"_index":859,"title":{},"body":{"overview.html":{}}}],["expression",{"_index":295,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["extends",{"_index":94,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["extra",{"_index":355,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["factory",{"_index":448,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["false",{"_index":312,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{}}}],["feature",{"_index":392,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["featuremodule",{"_index":745,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["features",{"_index":748,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["featureservice",{"_index":746,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["feel",{"_index":850,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["fetch",{"_index":588,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["fetch(config.options.dumppath)).json",{"_index":590,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["fetch(schemaurl)).json",{"_index":187,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["fetchschema",{"_index":140,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["fetchschema(schemaurl",{"_index":154,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["fff",{"_index":377,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["field",{"_index":766,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["fields",{"_index":768,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["fill",{"_index":832,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["filter",{"_index":785,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["filter(col",{"_index":649,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["filtered",{"_index":639,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["filtervalue",{"_index":800,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["findbyids$([id",{"_index":330,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["fixme",{"_index":561,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["font",{"_index":380,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["forchild",{"_index":9,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["forchild(options",{"_index":10,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["foreach(col",{"_index":651,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["forfeature",{"_index":417,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["forfeature(config",{"_index":458,"title":{},"body":{"modules/NgxRxdbModule.html":{}}}],["forroot",{"_index":23,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["forroot(config",{"_index":418,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["forroot(options",{"_index":24,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["free",{"_index":851,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["from(appinitstatus.donepromise).subscribe",{"_index":452,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["from(this.collection.bulkinsert(data",{"_index":335,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["from(this.collection.find(queryobj).remove",{"_index":342,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["from(this.collection.findone(id).exec",{"_index":329,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["from(this.collection.getlocal(id",{"_index":322,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["from(this.collection.insert(data",{"_index":334,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["from(this.collection.upsert(data",{"_index":336,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["from(this.collection.upsertlocal(id",{"_index":321,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["function",{"_index":159,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["functions",{"_index":724,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":740,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["generated",{"_index":888,"title":{},"body":{"additional-documentation/kinto.html":{}}}],["get(id",{"_index":232,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["get_imported",{"_index":510,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["getbyid",{"_index":195,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["getbyid(id",{"_index":235,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["getcollection",{"_index":266,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["getcollection(name",{"_index":473,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["getcollections",{"_index":508,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["getcouchauthproxyheaders",{"_index":463,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["getcouchauthproxyheaders(username",{"_index":475,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["getdb",{"_index":62,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["getlocal",{"_index":196,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["getlocal(id",{"_index":237,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["getting",{"_index":729,"title":{"index.html":{}},"body":{}}],["given",{"_index":216,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["graph",{"_index":852,"title":{},"body":{"modules.html":{}}}],["gt",{"_index":798,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["guid",{"_index":806,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["h",{"_index":303,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["hashes",{"_index":678,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["headers",{"_index":85,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":837,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["http",{"_index":542,"title":{},"body":{"injectables/NgxRxdbService.html":{},"dependencies.html":{}}}],["https://kinto.dev.mozaws.net/v1",{"_index":84,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["https://rxdb.info/rx",{"_index":778,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["https://v7.angular.io/api/core/app_initializer|app_initializer}s",{"_index":431,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["id",{"_index":234,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["idb",{"_index":546,"title":{},"body":{"injectables/NgxRxdbService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["idlength",{"_index":167,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/variables.html":{}}}],["idlengthfn",{"_index":160,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ignoreduplicate",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":132,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["importdbdump",{"_index":464,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["importdbdump(dumpobj",{"_index":480,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["imported",{"_index":393,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["imported_flag",{"_index":563,"title":{},"body":{"injectables/NgxRxdbService.html":{},"miscellaneous/variables.html":{}}}],["importing",{"_index":646,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["imports",{"_index":35,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["impoted",{"_index":660,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["include_docs",{"_index":311,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["inclusive_end",{"_index":317,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["incorrectly",{"_index":424,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["index",{"_index":56,"title":{"index.html":{}},"body":{"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":769,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["init",{"_index":395,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["initcollection",{"_index":465,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["initcollection(schemaconfig",{"_index":486,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["initcollections",{"_index":466,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["initcollections(schemaconfigs",{"_index":489,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["initdb",{"_index":467,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["initdb(config",{"_index":492,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["inited",{"_index":283,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["initialdocs",{"_index":108,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["initialize",{"_index":443,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["initialized",{"_index":645,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["inject",{"_index":64,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["inject(rxdb_config",{"_index":433,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["inject(rxdb_feature_config",{"_index":287,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["injectable",{"_index":53,"title":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["injectables",{"_index":54,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":65,"title":{},"body":{"injectables/NgxKintoService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngxrxdbconfig",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insert",{"_index":197,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["insert(data",{"_index":239,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["inserted",{"_index":771,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["insertlocal",{"_index":198,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["insertlocal(id",{"_index":241,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["inspiration",{"_index":750,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["inspired",{"_index":840,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["install",{"_index":743,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["instancetoken",{"_index":116,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["interface",{"_index":90,"title":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["interfaces",{"_index":92,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"overview.html":{}}}],["isempty",{"_index":539,"title":{},"body":{"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{}}}],["isempty(config.options",{"_index":584,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["isempty(config.options.schemas",{"_index":585,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["isempty(object",{"_index":360,"title":{},"body":{"classes/NgxRxdbError.html":{},"miscellaneous/functions.html":{}}}],["isempty(this.collections",{"_index":644,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["isrxcollection",{"_index":270,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["isrxcollection(collection",{"_index":604,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["isrxcollection(this.collection",{"_index":296,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["json",{"_index":589,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["jsonschema",{"_index":774,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["key",{"_index":113,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{}}}],["keyof",{"_index":173,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["kinto",{"_index":66,"title":{"additional-documentation/kinto.html":{}},"body":{"injectables/NgxKintoService.html":{},"dependencies.html":{},"additional-documentation/kinto.html":{}}}],["kinto(options",{"_index":89,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["kinto/lib/kintobase",{"_index":68,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["kintobaseoptions",{"_index":67,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["know",{"_index":776,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["lazy",{"_index":394,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["legend",{"_index":856,"title":{},"body":{"overview.html":{}}}],["library",{"_index":846,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{},"additional-documentation/kinto.html":{}}}],["libs/.../kinto.service.ts",{"_index":868,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../rxdb",{"_index":725,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../rxdb.interface.ts",{"_index":867,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../rxdb.model.ts",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../rxdb.module.ts",{"_index":726,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../rxdb.service.ts",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../rxdb.token.ts",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../utils.ts",{"_index":727,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/kinto/src/lib/kinto.module.ts",{"_index":6,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["libs/kinto/src/lib/kinto.module.ts:18",{"_index":25,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["libs/kinto/src/lib/kinto.module.ts:30",{"_index":13,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["libs/kinto/src/lib/services/kinto.service.ts",{"_index":55,"title":{},"body":{"injectables/NgxKintoService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/kinto/src/lib/services/kinto.service.ts:17",{"_index":63,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["libs/kinto/src/lib/services/kinto.service.ts:19",{"_index":61,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["libs/rxdb/src/lib/rxdb",{"_index":130,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/rxdb/src/lib/rxdb.interface.ts",{"_index":93,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"miscellaneous/typealiases.html":{}}}],["libs/rxdb/src/lib/rxdb.model.ts",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/rxdb/src/lib/rxdb.module.ts",{"_index":390,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"miscellaneous/functions.html":{}}}],["libs/rxdb/src/lib/rxdb.module.ts:33",{"_index":459,"title":{},"body":{"modules/NgxRxdbModule.html":{}}}],["libs/rxdb/src/lib/rxdb.module.ts:48",{"_index":460,"title":{},"body":{"modules/NgxRxdbModule.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts",{"_index":461,"title":{},"body":{"injectables/NgxRxdbService.html":{},"miscellaneous/variables.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:123",{"_index":490,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:139",{"_index":487,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:177",{"_index":474,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:187",{"_index":505,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:220",{"_index":503,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:243",{"_index":481,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:54",{"_index":478,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:66",{"_index":507,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:70",{"_index":509,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:74",{"_index":511,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:77",{"_index":513,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:79",{"_index":471,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:85",{"_index":472,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.service.ts:97",{"_index":493,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["libs/rxdb/src/lib/rxdb.token.ts",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/rxdb/src/lib/utils.ts",{"_index":354,"title":{},"body":{"classes/NgxRxdbError.html":{},"miscellaneous/functions.html":{}}}],["libs/rxdb/src/lib/utils.ts:28",{"_index":357,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["libs/rxdb/src/lib/utils.ts:29",{"_index":359,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["line",{"_index":369,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["line:no",{"_index":293,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["link",{"_index":430,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["list",{"_index":838,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["literal",{"_index":98,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":48,"title":{},"body":{"modules/NgxKintoModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["loader",{"_index":456,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["local",{"_index":758,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["localdoc",{"_index":323,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["localdoc.remove",{"_index":328,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["localdoc.save",{"_index":327,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["localdoc.set(prop",{"_index":326,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["logfn",{"_index":408,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{}}}],["logfn('appinitstatus.donepromise",{"_index":453,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["logfn('collection",{"_index":608,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["logfn('created",{"_index":582,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["logfn('dev",{"_index":557,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["logfn('syncallcollections",{"_index":654,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["logfn(...args",{"_index":368,"title":{},"body":{"classes/NgxRxdbError.html":{},"miscellaneous/functions.html":{}}}],["logfn(`created",{"_index":614,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["logfn(`returned",{"_index":626,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["logic",{"_index":446,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["looks",{"_index":765,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["main",{"_index":412,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["make",{"_index":437,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["mango",{"_index":791,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["mangoquery",{"_index":99,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["manually",{"_index":755,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["map",{"_index":277,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["mark",{"_index":663,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["matching",{"_index":51,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{},"additional-documentation/kinto.html":{}}}],["material",{"_index":844,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["max",{"_index":401,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["memory",{"_index":559,"title":{},"body":{"injectables/NgxRxdbService.html":{},"dependencies.html":{}}}],["merge",{"_index":632,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["mergeconfig(config",{"_index":566,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["merged",{"_index":763,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["message",{"_index":358,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["metadata",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":440,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["methods",{"_index":7,"title":{},"body":{"modules/NgxKintoModule.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["micro",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["migrateolddata",{"_index":81,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["migrationstrategies",{"_index":136,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["miscellaneous",{"_index":723,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":523,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["module",{"_index":0,"title":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/rxdb.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":22,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["multi",{"_index":421,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["multiinstance",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":16,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{}}}],["new",{"_index":45,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{}}}],["next",{"_index":292,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["ng",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["ngmodule",{"_index":29,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["ngondestroy",{"_index":199,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["ngrx",{"_index":843,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["ngx",{"_index":731,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{},"additional-documentation/kinto.html":{}}}],["ngx_kinto_options",{"_index":33,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"miscellaneous/variables.html":{}}}],["ngxkintomodule",{"_index":1,"title":{"modules/NgxKintoModule.html":{}},"body":{"modules/NgxKintoModule.html":{},"modules.html":{}}}],["ngxkintooptions",{"_index":11,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ngxkintoservice",{"_index":32,"title":{"injectables/NgxKintoService.html":{}},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{}}}],["ngxrxdb",{"_index":373,"title":{},"body":{"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{}}}],["ngxrxdbcollectionconfig",{"_index":91,"title":{"interfaces/NgxRxdbCollectionConfig.html":{}},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{}}}],["ngxrxdbcollectionconfig['attachments",{"_index":176,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["ngxrxdbcollectionconfig['cachereplacementpolicy",{"_index":178,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["ngxrxdbcollectionconfig['methods",{"_index":175,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["ngxrxdbcollectionconfig['migrationstrategies",{"_index":171,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["ngxrxdbcollectionconfig['options",{"_index":177,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbService.html":{}}}],["ngxrxdbcollectionconfig['pouchsettings",{"_index":170,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["ngxrxdbcollectionconfig['statics",{"_index":172,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["ngxrxdbcollectioncreator",{"_index":128,"title":{"classes/NgxRxdbCollectionCreator.html":{}},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbService.html":{}}}],["ngxrxdbcollectioncreator(config",{"_index":675,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["ngxrxdbcollectioncreator.fetchschema",{"_index":672,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["ngxrxdbcollectionservice",{"_index":188,"title":{"injectables/NgxRxdbCollectionService.html":{}},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["ngxrxdbconfig",{"_index":111,"title":{"interfaces/NgxRxdbConfig.html":{}},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{}}}],["ngxrxdbdump",{"_index":115,"title":{"interfaces/NgxRxdbDump.html":{}},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{}}}],["ngxrxdberror",{"_index":353,"title":{"classes/NgxRxdbError.html":{}},"body":{"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{}}}],["ngxrxdberror(error.message",{"_index":593,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["ngxrxdberror.prototype",{"_index":388,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["ngxrxdbfeaturemodule",{"_index":389,"title":{"modules/NgxRxdbFeatureModule.html":{}},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"modules.html":{}}}],["ngxrxdbmodule",{"_index":416,"title":{"modules/NgxRxdbModule.html":{}},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"modules.html":{},"additional-documentation/rxdb.html":{}}}],["ngxrxdbmodule.forroot",{"_index":762,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["ngxrxdbservice",{"_index":210,"title":{"injectables/NgxRxdbService.html":{}},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["ngxrxdbservice.mergeconfig(config",{"_index":580,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["noop",{"_index":365,"title":{},"body":{"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"miscellaneous/functions.html":{}}}],["normal",{"_index":382,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["normalize.css",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["nrwl/angular",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":124,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/rxdb.html":{}}}],["number",{"_index":121,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"miscellaneous/typealiases.html":{}}}],["nx",{"_index":889,"title":{},"body":{"additional-documentation/kinto.html":{}}}],["object",{"_index":125,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["object.assign",{"_index":567,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["object.assign(this",{"_index":183,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["object.keys(bulk",{"_index":602,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["object.keys(bulk).length",{"_index":601,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["object.keys(object).length",{"_index":362,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["object.setprototypeof(this",{"_index":387,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["object.values(object).every(val",{"_index":363,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["object.values(schemaconfigs",{"_index":667,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["object.values(this.collections",{"_index":648,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["observable",{"_index":223,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["od",{"_index":812,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["odm/rxdb",{"_index":732,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["old",{"_index":662,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["once",{"_index":413,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["ondestroy",{"_index":269,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["optional",{"_index":18,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["optionally",{"_index":668,"title":{},"body":{"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["options",{"_index":19,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{}}}],["out",{"_index":862,"title":{},"body":{"overview.html":{}}}],["over",{"_index":545,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["overview",{"_index":855,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":685,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":378,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["page",{"_index":887,"title":{"additional-documentation/rxdb.html":{},"additional-documentation/kinto.html":{}},"body":{}}],["param",{"_index":425,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["parameters",{"_index":14,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":432,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["parentmodule",{"_index":43,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["parseint(docscount",{"_index":618,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["partial",{"_index":95,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["passwordhash",{"_index":118,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["payload",{"_index":805,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["per",{"_index":402,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["pipe(map(r",{"_index":331,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["policy",{"_index":182,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["pouch.bulkdocs",{"_index":221,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["pouchdb",{"_index":482,"title":{},"body":{"injectables/NgxRxdbService.html":{},"dependencies.html":{}}}],["pouchdb.bulkdocs",{"_index":816,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["pouchdbinstance",{"_index":157,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["pouchdbinstance).info()).doc_count",{"_index":165,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["pouchsettings",{"_index":137,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"miscellaneous/variables.html":{}}}],["pre",{"_index":831,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["preload",{"_index":615,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["preparecollections(schemaconfigs",{"_index":665,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["preparedump(dumpobj",{"_index":679,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["prevents",{"_index":422,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["primary",{"_index":767,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["private",{"_index":72,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["production",{"_index":827,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["progress",{"_index":839,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["project",{"_index":756,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["projects",{"_index":777,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["promise",{"_index":156,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{}}}],["prop",{"_index":251,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["properties",{"_index":96,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{}}}],["protected",{"_index":288,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["provide",{"_index":40,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["provided",{"_index":436,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"overview.html":{}}}],["public",{"_index":74,"title":{},"body":{"injectables/NgxKintoService.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["qeury",{"_index":818,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["queries",{"_index":792,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["query",{"_index":217,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["queryobj",{"_index":105,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["r.get(id",{"_index":333,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["r.size",{"_index":332,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["readonly",{"_index":289,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["realtime",{"_index":735,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["recreate",{"_index":109,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["reflect",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["reflects",{"_index":427,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["remote",{"_index":83,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbService.html":{}}}],["remotedbname",{"_index":258,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["remove",{"_index":200,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["remove(id",{"_index":244,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["removebulkby",{"_index":201,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["removebulkby(queryobj",{"_index":246,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["removedonetodos",{"_index":819,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["removelocal",{"_index":202,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["removelocal(id",{"_index":248,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["removes",{"_index":215,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["replacement",{"_index":181,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["replaysubject",{"_index":275,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["replicationstates",{"_index":647,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["replicationstates.push(sync",{"_index":653,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["represents",{"_index":218,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["require('../../../assets/data/todo.schema.json",{"_index":782,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["reset",{"_index":861,"title":{},"body":{"overview.html":{}}}],["result",{"_index":50,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{},"additional-documentation/kinto.html":{}}}],["results",{"_index":52,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{},"additional-documentation/kinto.html":{}}}],["return",{"_index":38,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["returns",{"_index":21,"title":{},"body":{"modules/NgxKintoModule.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{}}}],["roles",{"_index":476,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["roles.join",{"_index":571,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["root",{"_index":49,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["rulesobj",{"_index":222,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["rulesobject",{"_index":820,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["run",{"_index":494,"title":{},"body":{"injectables/NgxRxdbService.html":{},"additional-documentation/kinto.html":{}}}],["running",{"_index":429,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"additional-documentation/kinto.html":{}}}],["rxcollection",{"_index":271,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["rxcollectioncreator",{"_index":100,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["rxcollectioncreator['schema",{"_index":104,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["rxdatabase",{"_index":517,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdatabasecreator",{"_index":101,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["rxdb",{"_index":103,"title":{"additional-documentation/rxdb.html":{}},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["rxdb.initdb(config",{"_index":411,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["rxdb.interface",{"_index":158,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["rxdb.isrxcollection(${name",{"_index":627,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb.model",{"_index":538,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb.service",{"_index":280,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["rxdb.token",{"_index":282,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["rxdb/plugins/adapter",{"_index":519,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb/plugins/dev",{"_index":522,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb/plugins/json",{"_index":525,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb/plugins/migration",{"_index":527,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb/plugins/query",{"_index":529,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb/plugins/replication",{"_index":532,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb/plugins/validate",{"_index":534,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdb_config",{"_index":407,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"miscellaneous/variables.html":{}}}],["rxdb_config.tostring",{"_index":435,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["rxdb_default_adapter",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxdb_default_config",{"_index":537,"title":{},"body":{"injectables/NgxRxdbService.html":{},"miscellaneous/variables.html":{}}}],["rxdb_feature_config",{"_index":281,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"miscellaneous/variables.html":{}}}],["rxdbadaptercheckplugin",{"_index":518,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdbcollection",{"_index":396,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["rxdbdatabase",{"_index":415,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["rxdbjsondumpplugin",{"_index":524,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdbmigrationplugin",{"_index":526,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdbquerybuilderplugin",{"_index":528,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdbreplicationplugin",{"_index":531,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdbvalidateplugin",{"_index":533,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["rxdocument",{"_index":272,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["rxjs",{"_index":276,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":279,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["rxjsonschema",{"_index":151,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["rxlocaldocument",{"_index":273,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["rxquery",{"_index":790,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["rxreplicationstate",{"_index":259,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["rxschema",{"_index":781,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["schema",{"_index":97,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["schema.html",{"_index":779,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["schema['_hash",{"_index":684,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemaconfig",{"_index":488,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemaconfig.name",{"_index":612,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemaconfig.options.initialdocs",{"_index":622,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemaconfig.options.initialdocs.length",{"_index":624,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemaconfig.options.recreate",{"_index":606,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemaconfig.options?.initialdocs",{"_index":619,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemaconfigs",{"_index":491,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemahash",{"_index":620,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemahashes",{"_index":676,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["schemas",{"_index":112,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["schemaurl",{"_index":106,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["screenshots",{"_index":741,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["selector",{"_index":796,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["selecttodos",{"_index":793,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["self",{"_index":405,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["series",{"_index":847,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["service",{"_index":444,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["services/kinto.service",{"_index":34,"title":{},"body":{"modules/NgxKintoModule.html":{}}}],["set",{"_index":203,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["set(id",{"_index":250,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["set_imported(v",{"_index":512,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["settings",{"_index":829,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["setup",{"_index":754,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["size",{"_index":381,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["skip",{"_index":315,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["skip_setup",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skipself",{"_index":30,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["sort",{"_index":801,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["standard",{"_index":775,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["started",{"_index":730,"title":{"index.html":{}},"body":{}}],["starter",{"_index":845,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["starts",{"_index":500,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["state",{"_index":428,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["static",{"_index":8,"title":{},"body":{"modules/NgxKintoModule.html":{},"classes/NgxRxdbCollectionCreator.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["statics",{"_index":138,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["status",{"_index":749,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["straight",{"_index":835,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["string",{"_index":107,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{}}}],["subscribe(doc",{"_index":815,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["super(message",{"_index":384,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["sure",{"_index":438,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["switchmap",{"_index":278,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["switchmap(filtervalue",{"_index":795,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["sync",{"_index":204,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["sync(remotedbname",{"_index":254,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["syncallcollections",{"_index":468,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["syncallcollections(remotedbname",{"_index":502,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["synccollection",{"_index":469,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["synccollection(col",{"_index":504,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["syncing",{"_index":544,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["syncoptions",{"_index":102,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"injectables/NgxRxdbService.html":{}}}],["syncoptions.options",{"_index":633,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["syncoptions.query",{"_index":641,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["syncoptions.queryobj",{"_index":640,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["syncoptions.remote",{"_index":630,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["syncoptions.remote.concat",{"_index":631,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["t",{"_index":226,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["table",{"_index":738,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["technologies",{"_index":742,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["test",{"_index":558,"title":{},"body":{"injectables/NgxRxdbService.html":{},"additional-documentation/kinto.html":{}}}],["tests",{"_index":891,"title":{},"body":{"additional-documentation/kinto.html":{}}}],["this._collection",{"_index":285,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this._db",{"_index":75,"title":{},"body":{"injectables/NgxKintoService.html":{}}}],["this._imported",{"_index":576,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.changefilter('all",{"_index":823,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["this.collection",{"_index":305,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collection.destroy",{"_index":297,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collection.find(queryobj",{"_index":307,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collection.find(rulesobj).exec",{"_index":343,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collection.findone(id).exec",{"_index":337,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collection.getlocal(id",{"_index":324,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collection.pouch.alldocs",{"_index":310,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collection.pouch.bulkdocs(deleteddocs",{"_index":352,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collectionloaded$().pipe",{"_index":306,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collectionloaded$().subscribe",{"_index":290,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.collections",{"_index":681,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.collectionservice.collectionloaded$().subscribe(noop",{"_index":457,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["this.collectionservice.docs(queryobj",{"_index":803,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["this.collectionservice.insert(payload).subscribe(doc",{"_index":810,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["this.collectionservice.removebulkby(rulesobject).subscribe(res",{"_index":822,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["this.collectionservice.update(guid",{"_index":814,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["this.constructor.name",{"_index":386,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["this.db.collections",{"_index":573,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.db.importdump(dump",{"_index":656,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.db.pouchsettings.ajax",{"_index":635,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.db[name",{"_index":625,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.db[schemaconfig.name",{"_index":603,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.dbinstance",{"_index":572,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.dbinstance.addcollections(collectioncreator",{"_index":613,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.dbinstance.addcollections(collectioncreators",{"_index":599,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.dbinstance.destroy",{"_index":578,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.dbinstance.remove",{"_index":577,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.dbservice.db",{"_index":286,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.dbservice.initcollection(this.config).then(collection",{"_index":300,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.dbservice.synccollection",{"_index":304,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.filter$.pipe",{"_index":794,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["this.importdbdump(dump",{"_index":592,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.initcollections(config.options.schemas",{"_index":586,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.inited",{"_index":298,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.inited$.asobservable",{"_index":299,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.inited$.complete",{"_index":302,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.inited$.next(true",{"_index":301,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["this.name",{"_index":385,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["this.pouch",{"_index":164,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["this.preparecollections",{"_index":611,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.preparecollections(schemaconfigs",{"_index":595,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.preparedump(dumpobj",{"_index":655,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["this.primary.length",{"_index":161,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["this.synccollection(col",{"_index":652,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["throw",{"_index":44,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["timeout",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":120,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{}}}],["todo",{"_index":442,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["todocollectionconfig",{"_index":783,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["todomvc",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["todoschema",{"_index":780,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["todosservice",{"_index":784,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["toggle(guid",{"_index":813,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["token",{"_index":477,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["toolkit/pwa",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":82,"title":{},"body":{"injectables/NgxKintoService.html":{},"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/rxdb.html":{}}}],["truengxrxdbconfig",{"_index":434,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["try",{"_index":309,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{}}}],["tslib",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":291,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{}}}],["tslint:disable:member",{"_index":398,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["type",{"_index":17,"title":{},"body":{"modules/NgxKintoModule.html":{},"injectables/NgxKintoService.html":{},"interfaces/NgxRxdbCollectionConfig.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"classes/NgxRxdbError.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":865,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":174,"title":{},"body":{"classes/NgxRxdbCollectionCreator.html":{}}}],["undefined",{"_index":123,"title":{},"body":{"interfaces/NgxRxdbCollectionConfig.html":{},"interfaces/NgxRxdbConfig.html":{},"interfaces/NgxRxdbDump.html":{},"miscellaneous/typealiases.html":{}}}],["unit",{"_index":890,"title":{},"body":{"additional-documentation/kinto.html":{}}}],["unused",{"_index":294,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["up",{"_index":501,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["update",{"_index":205,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["update(id",{"_index":260,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["updatelocal",{"_index":206,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["updatelocal(id",{"_index":262,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["upsert",{"_index":207,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["upsert(data",{"_index":264,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["url",{"_index":669,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["usage",{"_index":744,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["use",{"_index":220,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["used",{"_index":484,"title":{},"body":{"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["usefactory",{"_index":419,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["username",{"_index":479,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["usevalue",{"_index":41,"title":{},"body":{"modules/NgxKintoModule.html":{},"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{}}}],["using",{"_index":789,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["utils",{"_index":409,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{}}}],["uuid",{"_index":807,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["v",{"_index":514,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["val",{"_index":364,"title":{},"body":{"classes/NgxRxdbError.html":{}}}],["validates",{"_index":770,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["value",{"_index":252,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":869,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":761,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["via",{"_index":450,"title":{},"body":{"modules/NgxRxdbFeatureModule.html":{},"modules/NgxRxdbModule.html":{},"injectables/NgxRxdbService.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["void",{"_index":366,"title":{},"body":{"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/rxdb.html":{}}}],["voznik",{"_index":849,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["want",{"_index":753,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["way",{"_index":219,"title":{},"body":{"injectables/NgxRxdbCollectionService.html":{}}}],["web",{"_index":736,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["window",{"_index":555,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["window.localstorage[imported_flag",{"_index":574,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["withcredentials",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":834,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["worker",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["wrapper",{"_index":734,"title":{},"body":{"index.html":{},"additional-documentation/rxdb.html":{}}}],["x",{"_index":568,"title":{},"body":{"injectables/NgxRxdbService.html":{}}}],["yes",{"_index":20,"title":{},"body":{"modules/NgxKintoModule.html":{},"classes/NgxRxdbCollectionCreator.html":{},"injectables/NgxRxdbCollectionService.html":{},"classes/NgxRxdbError.html":{},"injectables/NgxRxdbService.html":{}}}],["zone.js",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":860,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/NgxKintoModule.html":{"url":"modules/NgxKintoModule.html","title":"module - NgxKintoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxKintoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/kinto/src/lib/kinto.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forChild(options?: NgxKintoOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/kinto/src/lib/kinto.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                NgxKintoOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: NgxKintoOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/kinto/src/lib/kinto.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                NgxKintoOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  NgxKintoOptions,\n  NgxKintoService,\n  NGX_KINTO_OPTIONS,\n} from './services/kinto.service';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class NgxKintoModule {\n  static forRoot(\n    options: NgxKintoOptions\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxKintoModule,\n      providers: [\n        { provide: NGX_KINTO_OPTIONS, useValue: options || {} },\n        NgxKintoService,\n      ],\n    };\n  }\n\n  static forChild(\n    options?: NgxKintoOptions\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxKintoModule,\n      providers: [NgxKintoService],\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule?: NgxKintoModule) {\n    /* if (parentModule) {\n      throw new Error(\n        'NgxKintoModule already loaded. Import in root module only.'\n      );\n    } */\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxKintoService.html":{"url":"injectables/NgxKintoService.html","title":"injectable - NgxKintoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxKintoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/kinto/src/lib/services/kinto.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: NgxKintoOptions)\n                    \n                \n                        \n                            \n                                Defined in libs/kinto/src/lib/services/kinto.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        NgxKintoOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in libs/kinto/src/lib/services/kinto.service.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport Kinto from 'kinto';\nimport { KintoBaseOptions } from 'kinto/lib/KintoBase';\n\nexport type NgxKintoOptions = KintoBaseOptions & {\n  custom?: any;\n};\nexport const NGX_KINTO_OPTIONS = new InjectionToken(\n  'NgxKintoOptions'\n);\n\n// @dynamic\n@Injectable()\nexport class NgxKintoService {\n  private _db: Kinto;\n\n  public get db(): Kinto {\n    return this._db;\n  }\n\n  constructor(@Inject(NGX_KINTO_OPTIONS) options: NgxKintoOptions) {\n    options = {\n      ...options,\n      adapterOptions: {\n        // dbName: \"DemoDB\",  // Optional custom database name\n        migrateOldData: true,\n        // remote: \"https://kinto.dev.mozaws.net/v1/\",\n        // headers: {Authorization: \"Basic \" + btoa(\"user:pass\")}\n      },\n    };\n    this._db = new Kinto(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxRxdbCollectionConfig.html":{"url":"interfaces/NgxRxdbCollectionConfig.html","title":"interface - NgxRxdbCollectionConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxRxdbCollectionConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rxdb/src/lib/rxdb.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Partial\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                    \n                                \n                                \n                                    \n                                        schema:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  MangoQuery,\n  RxCollectionCreator,\n  RxDatabaseCreator,\n  SyncOptions,\n} from 'rxdb';\n\nexport interface NgxRxdbCollectionConfig extends Partial {\n  schema?: RxCollectionCreator['schema'];\n  options?: {\n    syncOptions?: SyncOptions & { queryObj?: MangoQuery };\n    schemaUrl?: string;\n    initialDocs?: any[];\n    recreate?: boolean;\n  };\n}\n\nexport interface NgxRxdbConfig extends RxDatabaseCreator {\n  options?: {\n    schemas?: { [key: string]: NgxRxdbCollectionConfig };\n    dumpPath?: string;\n  };\n}\n\nexport interface NgxRxdbDump {\n  name: string;\n  instanceToken?: string;\n  encrypted?: boolean;\n  passwordHash?: string;\n  collections: { [key: string]: any };\n  timestamp: number;\n}\n\nexport type AnyValue =\n  | undefined\n  | null\n  | boolean\n  | string\n  | number\n  | object\n  | Date\n  | any[];\nexport type AnyObject = { [key: string]: AnyValue };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxRxdbCollectionCreator.html":{"url":"classes/NgxRxdbCollectionCreator.html","title":"class - NgxRxdbCollectionCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgxRxdbCollectionCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rxdb/src/lib/rxdb-collection.class.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        RxCollectionCreator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                attachments\n                            \n                            \n                                    Optional\n                                autoMigrate\n                            \n                            \n                                    Optional\n                                cacheReplacementPolicy\n                            \n                            \n                                    Optional\n                                methods\n                            \n                            \n                                    Optional\n                                migrationStrategies\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                pouchSettings\n                            \n                            \n                                schema\n                            \n                            \n                                    Optional\n                                statics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                fetchSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxRxdbCollectionConfig, pouchSettings?: PouchSettings)\n                    \n                \n                        \n                            \n                                Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxRxdbCollectionConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pouchSettings\n                                                  \n                                                        \n                                                                    PouchSettings\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            attachments\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            autoMigrate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cacheReplacementPolicy\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            methods\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            migrationStrategies\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pouchSettings\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RxJsonSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statics\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            fetchSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchSchema(schemaUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.class.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schemaUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  RxJsonSchema,\n  RxCollectionCreator,\n  PouchSettings,\n  PouchDBInstance,\n} from 'rxdb';\nimport { NgxRxdbCollectionConfig } from './rxdb.interface';\n\nexport function idLengthFn() {\n  return this.primary.length;\n}\n\nexport async function countAllDocumentsFn(): Promise {\n  return (await (this.pouch as PouchDBInstance).info()).doc_count;\n}\n\nexport const DEFAULT_INSTANCE_METHODS: { [key: string]: Function } = {\n  idLength: idLengthFn,\n};\nexport const DEFAULT_COLLECTION_METHODS: { [key: string]: Function } = {\n  countAllDocuments: countAllDocumentsFn,\n};\n\n// @dynamic\nexport class NgxRxdbCollectionCreator implements RxCollectionCreator {\n  name: string;\n  schema: RxJsonSchema;\n  pouchSettings?: NgxRxdbCollectionConfig['pouchSettings'];\n  migrationStrategies?: NgxRxdbCollectionConfig['migrationStrategies'];\n  statics?: NgxRxdbCollectionConfig['statics'] &\n    keyof typeof DEFAULT_COLLECTION_METHODS;\n  methods?: NgxRxdbCollectionConfig['methods'];\n  attachments?: NgxRxdbCollectionConfig['attachments'];\n  options?: NgxRxdbCollectionConfig['options'];\n  autoMigrate?: boolean; // (optional)\n  cacheReplacementPolicy?: NgxRxdbCollectionConfig['cacheReplacementPolicy']; // (optional) custoom cache replacement policy\n\n  constructor(config: NgxRxdbCollectionConfig, pouchSettings?: PouchSettings) {\n    Object.assign(this, {\n      ...config,\n      pouchSettings: { ...pouchSettings, ...config.pouchSettings },\n      methods: { ...DEFAULT_INSTANCE_METHODS, ...config.methods },\n      statics: { ...DEFAULT_COLLECTION_METHODS, ...config.statics },\n    });\n  }\n\n  static async fetchSchema(schemaUrl: string): Promise {\n    return await (await fetch(schemaUrl)).json();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxRxdbCollectionService.html":{"url":"injectables/NgxRxdbCollectionService.html","title":"injectable - NgxRxdbCollectionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxRxdbCollectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rxdb/src/lib/rxdb-collection.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _removeBulkBy\n                            \n                            \n                                allDocs\n                            \n                            \n                                bulkInsert\n                            \n                            \n                                collectionLoaded$\n                            \n                            \n                                docs\n                            \n                            \n                                get\n                            \n                            \n                                getById\n                            \n                            \n                                getLocal\n                            \n                            \n                                insert\n                            \n                            \n                                insertLocal\n                            \n                            \n                                    Async\n                                ngOnDestroy\n                            \n                            \n                                remove\n                            \n                            \n                                removeBulkBy\n                            \n                            \n                                removeLocal\n                            \n                            \n                                set\n                            \n                            \n                                sync\n                            \n                            \n                                update\n                            \n                            \n                                updateLocal\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    collection\n                                \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: NgxRxdbService, config: NgxRxdbCollectionConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        NgxRxdbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxRxdbCollectionConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _removeBulkBy\n                        \n                        \n                    \n                \n            \n            \n                \n_removeBulkBy(rulesObj)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:175\n                \n            \n\n\n            \n                \n                    removes all docs by given query\nalso represents a way to use 'pouch.bulkDocs' with RxDb\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rulesObj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allDocs\n                        \n                        \n                    \n                \n            \n            \n                \nallDocs()\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bulkInsert\n                        \n                        \n                    \n                \n            \n            \n                \nbulkInsert(data: T[])\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectionLoaded$\n                        \n                        \n                    \n                \n            \n            \n                \ncollectionLoaded$()\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            docs\n                        \n                        \n                    \n                \n            \n            \n                \ndocs(queryObj?: MangoQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryObj\n                                    \n                                            MangoQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocal\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocal(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(data: T)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertLocal\n                        \n                        \n                    \n                \n            \n            \n                \ninsertLocal(id: string, data: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBulkBy\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBulkBy(queryObj?: MangoQuery)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryObj\n                                    \n                                            MangoQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeLocal\n                        \n                        \n                    \n                \n            \n            \n                \nremoveLocal(id: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(id: string, prop: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prop\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \nsync(remoteDbName: string, customHeaders?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    remoteDbName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'db'\n                                    \n\n                                \n                                \n                                    customHeaders\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RxReplicationState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, data: Partial)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLocal\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLocal(id: string, prop: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prop\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(data: T)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        collection\n                    \n                \n\n                \n                    \n                        getcollection()\n                    \n                \n                            \n                                \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in libs/rxdb/src/lib/rxdb-collection.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport {\n  isRxCollection,\n  MangoQuery,\n  RxCollection,\n  RxDocument,\n  RxLocalDocument,\n  RxReplicationState,\n} from 'rxdb';\nimport { defer, from, Observable, ReplaySubject } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AnyObject, NgxRxdbCollectionConfig } from './rxdb.interface';\nimport { NgxRxdbService } from './rxdb.service';\nimport { RXDB_FEATURE_CONFIG } from './rxdb.token';\n\n@Injectable()\nexport class NgxRxdbCollectionService implements OnDestroy {\n  private inited$: ReplaySubject;\n  private _collection: RxCollection;\n\n  get collection() {\n    return this._collection;\n  }\n  get db() {\n    return this.dbService.db;\n  }\n\n  constructor(\n    private dbService: NgxRxdbService,\n    @Inject(RXDB_FEATURE_CONFIG)\n    protected readonly config: NgxRxdbCollectionConfig\n  ) {\n    // this.collectionLoaded$().subscribe();\n  }\n\n  async ngOnDestroy() {\n    // tslint:disable-next-line:no-unused-expression\n    isRxCollection(this.collection) && (await this.collection.destroy());\n  }\n\n  /**  */\n  collectionLoaded$(): Observable {\n    if (this.inited$) {\n      return this.inited$.asObservable();\n    }\n    this.inited$ = new ReplaySubject();\n    this.dbService.initCollection(this.config).then(collection => {\n      this._collection = collection;\n      this.inited$.next(true);\n      this.inited$.complete();\n    });\n    return this.inited$.asObservable();\n  }\n\n  sync(\n    remoteDbName: string = 'db',\n    customHeaders?: { [h: string]: string }\n  ): RxReplicationState {\n    return this.dbService.syncCollection(\n      this.collection,\n      remoteDbName,\n      customHeaders\n    );\n  }\n\n  docs(queryObj?: MangoQuery): Observable[]> {\n    return this.collectionLoaded$().pipe(\n      switchMap(() => this.collection.find(queryObj).$)\n    );\n  }\n\n  allDocs(): Observable[]> {\n    return defer(async () => {\n      try {\n        const docs = await this.collection.pouch.allDocs({\n          include_docs: true,\n          attachments: false,\n          endkey: '_design', // INFO: to skip design docs\n          inclusive_end: false, // INFO: to skip design docs\n        });\n        return docs.rows.map(({ doc, id }) => ({ ...doc, id }));\n      } catch {\n        return [];\n      }\n    });\n  }\n\n  insertLocal(id: string, data: any): Observable> {\n    return from(this.collection.upsertLocal(id, data));\n  }\n\n  getLocal(id: string): Observable> {\n    return this.collectionLoaded$().pipe(\n      switchMap(() => from(this.collection.getLocal(id)))\n    );\n  }\n\n  updateLocal(id: string, prop: string, value: any): Observable {\n    return defer(async () => {\n      const localDoc = await this.collection.getLocal(id);\n      // change data\n      localDoc.set(prop, value);\n      await localDoc.save();\n    });\n  }\n\n  removeLocal(id: string): Observable {\n    return defer(async () => {\n      const localDoc = await this.collection.getLocal(id);\n      return localDoc.remove();\n    });\n  }\n\n  get(id: string): Observable> {\n    return this.collectionLoaded$().pipe(\n      switchMap(() => from(this.collection.findOne(id).exec()))\n    );\n  }\n\n  getById(id: string): Observable> {\n    return this.collectionLoaded$().pipe(\n      switchMap(() =>\n        this.collection\n          .findByIds$([id])\n          .pipe(map(r => (r.size ? r.get(id) : null)))\n      )\n    );\n  }\n\n  insert(data: T): Observable> {\n    return from(this.collection.insert(data));\n  }\n\n  bulkInsert(data: T[]): Observable[]; error: any }> {\n    return from(this.collection.bulkInsert(data));\n  }\n\n  upsert(data: T): Observable> {\n    return from(this.collection.upsert(data));\n  }\n\n  update(id: string, data: Partial): Observable> {\n    return defer(async () => {\n      const doc = await this.collection.findOne(id).exec();\n      return doc.update({ $set: { ...data } });\n    });\n  }\n\n  set(id: string, prop: string, value: any): Observable {\n    return defer(async () => {\n      const doc = await this.collection.findOne(id).exec();\n      doc.set(prop, value);\n      return doc.save();\n    });\n  }\n\n  remove(id: string): Observable {\n    return defer(async () => {\n      const doc = await this.collection.findOne(id).exec();\n      return doc.remove();\n    });\n  }\n\n  removeBulkBy(queryObj?: MangoQuery): Observable {\n    return this.collectionLoaded$().pipe(\n      switchMap(() => from(this.collection.find(queryObj).remove()))\n    );\n  }\n\n  /**\n   * removes all docs by given query\n   * also represents a way to use 'pouch.bulkDocs' with RxDb\n   */\n  _removeBulkBy(\n    rulesObj\n  ): Observable {\n    return defer(async () => {\n      try {\n        const docs = await this.collection.find(rulesObj).exec();\n        if (docs && docs.length) {\n          const deletedDocs = docs.map(doc => ({\n            _id: doc.primary,\n            _rev: doc['_rev'],\n            _deleted: true,\n          }));\n          return this.collection.pouch.bulkDocs(deletedDocs);\n        }\n      } catch (error) {\n        return null;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxRxdbConfig.html":{"url":"interfaces/NgxRxdbConfig.html","title":"interface - NgxRxdbConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxRxdbConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rxdb/src/lib/rxdb.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    RxDatabaseCreator\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  MangoQuery,\n  RxCollectionCreator,\n  RxDatabaseCreator,\n  SyncOptions,\n} from 'rxdb';\n\nexport interface NgxRxdbCollectionConfig extends Partial {\n  schema?: RxCollectionCreator['schema'];\n  options?: {\n    syncOptions?: SyncOptions & { queryObj?: MangoQuery };\n    schemaUrl?: string;\n    initialDocs?: any[];\n    recreate?: boolean;\n  };\n}\n\nexport interface NgxRxdbConfig extends RxDatabaseCreator {\n  options?: {\n    schemas?: { [key: string]: NgxRxdbCollectionConfig };\n    dumpPath?: string;\n  };\n}\n\nexport interface NgxRxdbDump {\n  name: string;\n  instanceToken?: string;\n  encrypted?: boolean;\n  passwordHash?: string;\n  collections: { [key: string]: any };\n  timestamp: number;\n}\n\nexport type AnyValue =\n  | undefined\n  | null\n  | boolean\n  | string\n  | number\n  | object\n  | Date\n  | any[];\nexport type AnyObject = { [key: string]: AnyValue };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxRxdbDump.html":{"url":"interfaces/NgxRxdbDump.html","title":"interface - NgxRxdbDump","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxRxdbDump\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rxdb/src/lib/rxdb.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        collections\n                                \n                                \n                                            Optional\n                                        encrypted\n                                \n                                \n                                            Optional\n                                        instanceToken\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        passwordHash\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collections\n                                    \n                                \n                                \n                                    \n                                        collections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encrypted\n                                    \n                                \n                                \n                                    \n                                        encrypted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instanceToken\n                                    \n                                \n                                \n                                    \n                                        instanceToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordHash\n                                    \n                                \n                                \n                                    \n                                        passwordHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  MangoQuery,\n  RxCollectionCreator,\n  RxDatabaseCreator,\n  SyncOptions,\n} from 'rxdb';\n\nexport interface NgxRxdbCollectionConfig extends Partial {\n  schema?: RxCollectionCreator['schema'];\n  options?: {\n    syncOptions?: SyncOptions & { queryObj?: MangoQuery };\n    schemaUrl?: string;\n    initialDocs?: any[];\n    recreate?: boolean;\n  };\n}\n\nexport interface NgxRxdbConfig extends RxDatabaseCreator {\n  options?: {\n    schemas?: { [key: string]: NgxRxdbCollectionConfig };\n    dumpPath?: string;\n  };\n}\n\nexport interface NgxRxdbDump {\n  name: string;\n  instanceToken?: string;\n  encrypted?: boolean;\n  passwordHash?: string;\n  collections: { [key: string]: any };\n  timestamp: number;\n}\n\nexport type AnyValue =\n  | undefined\n  | null\n  | boolean\n  | string\n  | number\n  | object\n  | Date\n  | any[];\nexport type AnyObject = { [key: string]: AnyValue };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxRxdbError.html":{"url":"classes/NgxRxdbError.html","title":"class - NgxRxdbError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgxRxdbError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rxdb/src/lib/utils.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                extra\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, extra?: any)\n                    \n                \n                        \n                            \n                                Defined in libs/rxdb/src/lib/utils.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extra\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            extra\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rxdb/src/lib/utils.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export function isEmpty(object, deep = false) {\n  if (object == null || !!!object) {\n    return true;\n  } else {\n    if (Object.keys(object).length) {\n      return deep\n        ? Object.values(object).every(val => val === null || !!!val)\n        : false;\n    }\n    return true;\n  }\n}\n\nexport function noop(): void {\n  return void 0;\n}\n\nexport function logFn(...args) {\n  // tslint:disable-next-line: no-console\n  console.log.call(\n    console,\n    `%c[DEBUG:: NgxRxdb::]`,\n    'background: #8d2089; color: #fff; padding: 2px; font-size: normal;',\n    ...args\n  );\n}\n\nexport class NgxRxdbError extends Error {\n  constructor(message: string, public extra?: any) {\n    super(message);\n    this.name = this.constructor.name;\n    Object.setPrototypeOf(this, NgxRxdbError.prototype);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxRxdbFeatureModule.html":{"url":"modules/NgxRxdbFeatureModule.html","title":"module - NgxRxdbFeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxRxdbFeatureModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/rxdb/src/lib/rxdb.module.ts\n        \n\n\n        \n            Description\n        \n        \n            feature module which should be imported in lazy feature modules, will init RxDbCollection with given configuration\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // tslint:disable:member-access array-type max-classes-per-file\nimport {\n  ApplicationInitStatus,\n  APP_INITIALIZER,\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  Self,\n  SkipSelf,\n} from '@angular/core';\nimport { from } from 'rxjs';\nimport { NgxRxdbCollectionService } from './rxdb-collection.service';\nimport { NgxRxdbCollectionConfig, NgxRxdbConfig } from './rxdb.interface';\nimport { NgxRxdbService } from './rxdb.service';\nimport { RXDB_CONFIG, RXDB_FEATURE_CONFIG } from './rxdb.token';\nimport { logFn, noop } from './utils';\n\nexport function dbInitializerFactory(\n  rxdb: NgxRxdbService,\n  config: NgxRxdbConfig\n): () => Promise {\n  return async () => {\n    await rxdb.initDb(config);\n  };\n}\n/**\n * main module which should be imported once in app module, will init RxDbDatabase with given configuration\n */\n// @dynamic\n@NgModule()\nexport class NgxRxdbModule {\n  static forFeature(\n    config: NgxRxdbCollectionConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxRxdbFeatureModule,\n      providers: [\n        {\n          provide: RXDB_FEATURE_CONFIG,\n          useValue: config,\n        },\n        NgxRxdbCollectionService,\n      ],\n    };\n  }\n\n  static forRoot(config: NgxRxdbConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxRxdbModule,\n      providers: [\n        { provide: RXDB_CONFIG, useValue: config },\n        NgxRxdbService,\n        {\n          provide: APP_INITIALIZER,\n          useFactory: dbInitializerFactory,\n          deps: [NgxRxdbService, RXDB_CONFIG],\n          multi: true,\n        },\n      ],\n    };\n  }\n\n  /**\n   * Prevents this module from being incorrectly imported\n   * @param appInitStatus - A class that reflects the state of running {@link https://v7.angular.io/api/core/APP_INITIALIZER|APP_INITIALIZER}s.\n   * @param parentModule - The parent module\n   * @param ngxRxdbConfig - The configuration of the `NgxRxdbModule`\n   */\n  public constructor(\n    appInitStatus: ApplicationInitStatus,\n    @Optional()\n    @SkipSelf()\n    @Inject(RXDB_CONFIG)\n    ngxRxdbConfig: NgxRxdbConfig,\n    @Optional()\n    @Self()\n    @Inject(RXDB_CONFIG)\n    trueNgxRxdbConfig: NgxRxdbConfig,\n    @Optional()\n    @SkipSelf()\n    @Inject(RXDB_FEATURE_CONFIG)\n    ngxRxdbCollectionConfig: NgxRxdbCollectionConfig,\n    @Self() ngxRxdbService: NgxRxdbService\n  ) {\n    if (!trueNgxRxdbConfig && !ngxRxdbConfig) {\n      throw new Error(\n        `${RXDB_CONFIG.toString()} is not provided. Make sure you call the 'forRoot' method of the NgxRxdbModule in the AppModule only.`\n      );\n    }\n\n    if (trueNgxRxdbConfig && ngxRxdbConfig) {\n      throw new Error(\n        `${RXDB_CONFIG.toString()} is already provided. Make sure you call the 'forRoot' method of the NgxRxdbModule in the AppModule only.`\n      );\n    }\n\n    // TODO: initialize the service only when this is a Root module ('forRoot' was called)\n    if (trueNgxRxdbConfig && !ngxRxdbConfig) {\n      // this logic cannot be executed in an APP_INITIALIZER factory\n      // so this is done via appInitStatus.donePromise\n      from(appInitStatus.donePromise).subscribe(() => {\n        logFn('appInitStatus.donePromise');\n      });\n    }\n  }\n}\n/**\n * feature module which should be imported in lazy feature modules, will init RxDbCollection with given configuration\n */\n@NgModule({})\nexport class NgxRxdbFeatureModule {\n  constructor(public collectionService: NgxRxdbCollectionService) {\n    // init collection via loader\n    this.collectionService.collectionLoaded$().subscribe(noop);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxRxdbModule.html":{"url":"modules/NgxRxdbModule.html","title":"module - NgxRxdbModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxRxdbModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/rxdb/src/lib/rxdb.module.ts\n        \n\n\n        \n            Description\n        \n        \n            main module which should be imported once in app module, will init RxDbDatabase with given configuration\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forFeature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forFeature(config: NgxRxdbCollectionConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxRxdbCollectionConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxRxdbConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxRxdbConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        // tslint:disable:member-access array-type max-classes-per-file\nimport {\n  ApplicationInitStatus,\n  APP_INITIALIZER,\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  Self,\n  SkipSelf,\n} from '@angular/core';\nimport { from } from 'rxjs';\nimport { NgxRxdbCollectionService } from './rxdb-collection.service';\nimport { NgxRxdbCollectionConfig, NgxRxdbConfig } from './rxdb.interface';\nimport { NgxRxdbService } from './rxdb.service';\nimport { RXDB_CONFIG, RXDB_FEATURE_CONFIG } from './rxdb.token';\nimport { logFn, noop } from './utils';\n\nexport function dbInitializerFactory(\n  rxdb: NgxRxdbService,\n  config: NgxRxdbConfig\n): () => Promise {\n  return async () => {\n    await rxdb.initDb(config);\n  };\n}\n/**\n * main module which should be imported once in app module, will init RxDbDatabase with given configuration\n */\n// @dynamic\n@NgModule()\nexport class NgxRxdbModule {\n  static forFeature(\n    config: NgxRxdbCollectionConfig\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxRxdbFeatureModule,\n      providers: [\n        {\n          provide: RXDB_FEATURE_CONFIG,\n          useValue: config,\n        },\n        NgxRxdbCollectionService,\n      ],\n    };\n  }\n\n  static forRoot(config: NgxRxdbConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxRxdbModule,\n      providers: [\n        { provide: RXDB_CONFIG, useValue: config },\n        NgxRxdbService,\n        {\n          provide: APP_INITIALIZER,\n          useFactory: dbInitializerFactory,\n          deps: [NgxRxdbService, RXDB_CONFIG],\n          multi: true,\n        },\n      ],\n    };\n  }\n\n  /**\n   * Prevents this module from being incorrectly imported\n   * @param appInitStatus - A class that reflects the state of running {@link https://v7.angular.io/api/core/APP_INITIALIZER|APP_INITIALIZER}s.\n   * @param parentModule - The parent module\n   * @param ngxRxdbConfig - The configuration of the `NgxRxdbModule`\n   */\n  public constructor(\n    appInitStatus: ApplicationInitStatus,\n    @Optional()\n    @SkipSelf()\n    @Inject(RXDB_CONFIG)\n    ngxRxdbConfig: NgxRxdbConfig,\n    @Optional()\n    @Self()\n    @Inject(RXDB_CONFIG)\n    trueNgxRxdbConfig: NgxRxdbConfig,\n    @Optional()\n    @SkipSelf()\n    @Inject(RXDB_FEATURE_CONFIG)\n    ngxRxdbCollectionConfig: NgxRxdbCollectionConfig,\n    @Self() ngxRxdbService: NgxRxdbService\n  ) {\n    if (!trueNgxRxdbConfig && !ngxRxdbConfig) {\n      throw new Error(\n        `${RXDB_CONFIG.toString()} is not provided. Make sure you call the 'forRoot' method of the NgxRxdbModule in the AppModule only.`\n      );\n    }\n\n    if (trueNgxRxdbConfig && ngxRxdbConfig) {\n      throw new Error(\n        `${RXDB_CONFIG.toString()} is already provided. Make sure you call the 'forRoot' method of the NgxRxdbModule in the AppModule only.`\n      );\n    }\n\n    // TODO: initialize the service only when this is a Root module ('forRoot' was called)\n    if (trueNgxRxdbConfig && !ngxRxdbConfig) {\n      // this logic cannot be executed in an APP_INITIALIZER factory\n      // so this is done via appInitStatus.donePromise\n      from(appInitStatus.donePromise).subscribe(() => {\n        logFn('appInitStatus.donePromise');\n      });\n    }\n  }\n}\n/**\n * feature module which should be imported in lazy feature modules, will init RxDbCollection with given configuration\n */\n@NgModule({})\nexport class NgxRxdbFeatureModule {\n  constructor(public collectionService: NgxRxdbCollectionService) {\n    // init collection via loader\n    this.collectionService.collectionLoaded$().subscribe(noop);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxRxdbService.html":{"url":"injectables/NgxRxdbService.html","title":"injectable - NgxRxdbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxRxdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rxdb/src/lib/rxdb.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                destroyDb\n                            \n                            \n                                getCollection\n                            \n                            \n                                    Static\n                                getCouchAuthProxyHeaders\n                            \n                            \n                                    Async\n                                importDbDump\n                            \n                            \n                                    Async\n                                initCollection\n                            \n                            \n                                    Async\n                                initCollections\n                            \n                            \n                                    Async\n                                initDb\n                            \n                            \n                                syncAllCollections\n                            \n                            \n                                syncCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                                \n                                    collections\n                                \n                                \n                                    _imported\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/rxdb/src/lib/rxdb.service.ts:79\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            destroyDb\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyDb()\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCollection\n                        \n                        \n                    \n                \n            \n            \n                \ngetCollection(name: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RxCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getCouchAuthProxyHeaders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCouchAuthProxyHeaders(userName: string, roles: string[], token: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importDbDump\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importDbDump(dumpObj: NgxRxdbDump)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:243\n                \n            \n\n\n            \n                \n                    imports pouchdb dump to the database, must be used only after db init\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dumpObj\n                                    \n                                                NgxRxdbDump\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initCollection(schemaConfig: NgxRxdbCollectionConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schemaConfig\n                                    \n                                                NgxRxdbCollectionConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initCollections\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initCollections(schemaConfigs: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schemaConfigs\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            initDb\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initDb(config: NgxRxdbConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:97\n                \n            \n\n\n            \n                \n                    This is run via APP_INITIALIZER in app.module.ts\nto ensure the database exists before the angular-app starts up\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxRxdbConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            syncAllCollections\n                        \n                        \n                    \n                \n            \n            \n                \nsyncAllCollections(remoteDbName: string, customHeaders?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    remoteDbName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'db'\n                                    \n\n                                \n                                \n                                    customHeaders\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RxReplicationState[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            syncCollection\n                        \n                        \n                    \n                \n            \n            \n                \nsyncCollection(col: RxCollection, remoteDbName: string, customHeaders?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/rxdb/src/lib/rxdb.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    col\n                                    \n                                            RxCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    remoteDbName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'db'\n                                    \n\n                                \n                                \n                                    customHeaders\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RxReplicationState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in libs/rxdb/src/lib/rxdb.service.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        collections\n                    \n                \n\n                \n                    \n                        getcollections()\n                    \n                \n                            \n                                \n                                    Defined in libs/rxdb/src/lib/rxdb.service.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _imported\n                    \n                \n\n                \n                    \n                        get_imported()\n                    \n                \n                            \n                                \n                                    Defined in libs/rxdb/src/lib/rxdb.service.ts:74\n                                \n                            \n\n                \n                    \n                        set_imported(v)\n                    \n                \n                            \n                                \n                                    Defined in libs/rxdb/src/lib/rxdb.service.ts:77\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  addRxPlugin,\n  createRxDatabase,\n  isRxCollection,\n  RxCollection,\n  RxCollectionCreator,\n  RxDatabase,\n  RxReplicationState,\n} from 'rxdb';\nimport { RxDBAdapterCheckPlugin } from 'rxdb/plugins/adapter-check';\nimport { checkSchema } from 'rxdb/plugins/dev-mode';\nimport { RxDBJsonDumpPlugin } from 'rxdb/plugins/json-dump';\nimport { RxDBMigrationPlugin } from 'rxdb/plugins/migration';\nimport { RxDBQueryBuilderPlugin } from 'rxdb/plugins/query-builder';\nimport { RxDBReplicationPlugin } from 'rxdb/plugins/replication';\nimport { RxDBValidatePlugin } from 'rxdb/plugins/validate';\n// NgxRxdb\nimport { NgxRxdbCollectionCreator } from './rxdb-collection.class';\nimport {\n  NgxRxdbCollectionConfig,\n  NgxRxdbConfig,\n  NgxRxdbDump,\n} from './rxdb.interface';\nimport { DEFAULT_BACKOFF_FN, RXDB_DEFAULT_CONFIG } from './rxdb.model';\nimport { isEmpty, logFn, NgxRxdbError } from './utils';\n\naddRxPlugin(require('pouchdb-adapter-http')); // enable syncing over http (remote database)\naddRxPlugin(require('pouchdb-adapter-idb'));\naddRxPlugin(RxDBValidatePlugin);\naddRxPlugin(RxDBQueryBuilderPlugin);\naddRxPlugin(RxDBJsonDumpPlugin);\naddRxPlugin(RxDBAdapterCheckPlugin);\naddRxPlugin(RxDBMigrationPlugin);\naddRxPlugin(RxDBReplicationPlugin);\n// only in development environment\nif ((window as any).process?.env?.TEST) {\n  logFn('dev or test mode');\n  // addRxPlugin(require('pouchdb-adapter-memory'));\n  // addRxPlugin(RxDBDevModePlugin); // FIXME: is it duplicate import ?\n}\n\nconst IMPORTED_FLAG = '_ngx_rxdb_imported';\n\n@Injectable()\nexport class NgxRxdbService {\n  private dbInstance: RxDatabase;\n\n  private static mergeConfig(config: NgxRxdbConfig): NgxRxdbConfig {\n    return Object.assign({}, RXDB_DEFAULT_CONFIG, config);\n  }\n\n  static getCouchAuthProxyHeaders(\n    userName: string = '',\n    roles: string[] = [],\n    token: string = ''\n  ): { [h: string]: string } {\n    return {\n      'X-Auth-CouchDB-UserName': userName,\n      'X-Auth-CouchDB-Roles': roles.join(','),\n      'X-Auth-CouchDB-Token': token,\n    };\n  }\n\n  get db(): RxDatabase {\n    return this.dbInstance;\n  }\n\n  get collections(): { [key: string]: RxCollection } {\n    return this.db.collections;\n  }\n\n  get _imported() {\n    return window.localStorage[IMPORTED_FLAG];\n  }\n  set _imported(v) {\n    window.localStorage[IMPORTED_FLAG] = v;\n  }\n\n  constructor() {\n    this._imported = window.localStorage[IMPORTED_FLAG];\n  }\n\n  async destroyDb() {\n    try {\n      await this.dbInstance.remove();\n      await this.dbInstance.destroy();\n      this.dbInstance = null;\n    } catch {}\n  }\n\n  /**\n   * This is run via APP_INITIALIZER in app.module.ts\n   * to ensure the database exists before the angular-app starts up\n   */\n  async initDb(config: NgxRxdbConfig) {\n    try {\n      const dbConfig = NgxRxdbService.mergeConfig(config);\n      const db: RxDatabase = await createRxDatabase(dbConfig);\n      this.dbInstance = db;\n      logFn('created database');\n      // also can create collections from root config\n      if (!isEmpty(config.options) && !isEmpty(config.options.schemas)) {\n        await this.initCollections(config.options.schemas);\n      }\n      if (!isEmpty(config.options) && config.options.dumpPath) {\n        // fetch dump json\n        const dump = await (await fetch(config.options.dumpPath)).json();\n        // import only new dump\n        if (\n          !this._imported ||\n          this._imported !== dump['timestamp'].toString()\n        ) {\n          await this.importDbDump(dump);\n        }\n      }\n    } catch (error) {\n      throw new NgxRxdbError(error.message ?? error);\n    }\n  }\n\n  async initCollections(schemaConfigs: {\n    [key: string]: NgxRxdbCollectionConfig;\n  }) {\n    try {\n      const collectionCreators = await this.prepareCollections(schemaConfigs);\n      // use bulk `addCollections` method at the end of array\n      const bulk = await this.dbInstance.addCollections(collectionCreators);\n      logFn(\n        `created ${Object.keys(bulk).length} collections bulk, `,\n        Object.keys(bulk)\n      );\n    } catch (error) {\n      throw new NgxRxdbError(error.message ?? error);\n    }\n  }\n\n  async initCollection(schemaConfig: NgxRxdbCollectionConfig) {\n    let collection: RxCollection = this.db[schemaConfig.name];\n    if (isRxCollection(collection)) {\n      // delete collection if exists\n      if (schemaConfig.options.recreate) {\n        return await collection.remove();\n      }\n      logFn('collection', collection.name, 'exists, skip create');\n      return collection;\n    }\n\n    const collectionCreator = await this.prepareCollections({\n      [schemaConfig.name]: schemaConfig,\n    });\n    collection = (await this.dbInstance.addCollections(collectionCreator))[\n      schemaConfig.name\n    ];\n    logFn(`created collection \"${collection.name}\"`);\n    // preload data into collection\n    const docsCount = await collection.countAllDocuments();\n    logFn(\n      `collection \"${collection.name}\" has \"${parseInt(docsCount, 0)}\" docs`\n    );\n    if (schemaConfig.options?.initialDocs && !!!docsCount) {\n      const dumpObj = {\n        name,\n        schemaHash: collection.schema.hash,\n        encrypted: false,\n        docs: [...schemaConfig.options.initialDocs],\n      };\n      await collection.importDump(dumpObj as any);\n      logFn(\n        `imported ${schemaConfig.options.initialDocs.length} docs for collection \"${name}\"`\n      );\n    }\n    return collection;\n  }\n\n  getCollection(name: string): RxCollection {\n    const collection: RxCollection = this.db[name];\n    if (isRxCollection(collection)) {\n      return collection;\n    } else {\n      logFn(`returned false for RxDB.isRxCollection(${name})`);\n      return null;\n    }\n  }\n\n  syncCollection(\n    col: RxCollection,\n    remoteDbName: string = 'db',\n    customHeaders?: { [h: string]: string }\n  ): RxReplicationState {\n    if (col.options?.syncOptions?.remote) {\n      const { syncOptions } = col.options as NgxRxdbCollectionConfig['options'];\n      syncOptions.remote = syncOptions.remote.concat('/', remoteDbName);\n      // merge options\n      syncOptions.options = Object.assign(\n        {\n          back_off_function: DEFAULT_BACKOFF_FN,\n        },\n        this.db.pouchSettings.ajax,\n        col.pouchSettings.ajax,\n        syncOptions.options\n      );\n      // append auth headers\n      if (customHeaders) {\n        (syncOptions.options as any).headers = Object.assign(\n          {},\n          (syncOptions.options as any).headers,\n          customHeaders\n        );\n      }\n      // set filtered sync\n      if (syncOptions.queryObj) {\n        syncOptions.query = col.find(syncOptions.queryObj);\n      }\n      return col.sync(syncOptions);\n    }\n  }\n\n  syncAllCollections(\n    remoteDbName: string = 'db',\n    customHeaders?: { [h: string]: string }\n  ): RxReplicationState[] {\n    if (isEmpty(this.collections)) {\n      throw new NgxRxdbError(\n        'collections must be initialized before importing dump'\n      );\n    }\n    const replicationStates: RxReplicationState[] = [];\n    Object.values(this.collections)\n      .filter(col => 'remote' in col.options.syncOptions)\n      .forEach(col => {\n        const sync = this.syncCollection(col, remoteDbName, customHeaders);\n        replicationStates.push(sync);\n      });\n    logFn('syncAllCollections = ', replicationStates);\n    return replicationStates;\n  }\n\n  /**\n   * imports pouchdb dump to the database, must be used only after db init\n   */\n  async importDbDump(dumpObj: NgxRxdbDump) {\n    try {\n      const dump = this.prepareDump(dumpObj);\n      await this.db.importDump(dump as any);\n      this._imported = dump.timestamp;\n    } catch (error) {\n      if (error.status !== 409) {\n        throw new NgxRxdbError(error.message ?? error);\n      } else {\n        // impoted but were conflicts with old docs - mark as imported\n        this._imported = dumpObj.timestamp;\n      }\n    }\n  }\n\n  private async prepareCollections(schemaConfigs: {\n    [key: string]: NgxRxdbCollectionConfig;\n  }): Promise {\n    try {\n      const collectionCreators = {};\n      const configs = Object.values(schemaConfigs);\n      for (const config of configs) {\n        // optionally fetch schema from remote url\n        if (!config.schema && !!config.options.schemaUrl) {\n          config.schema = await NgxRxdbCollectionCreator.fetchSchema(\n            config.options.schemaUrl\n          );\n        }\n        checkSchema(config.schema);\n        collectionCreators[config.name] = new NgxRxdbCollectionCreator(config);\n      }\n      return collectionCreators;\n    } catch (error) {\n      throw new NgxRxdbError(error.message ?? error);\n    }\n  }\n\n  /** change schemaHashes from dump to existing schema hashes */\n  private prepareDump(dumpObj: NgxRxdbDump): NgxRxdbDump {\n    const dumpWithHashes = { ...dumpObj };\n    if (isEmpty(this.collections)) {\n      throw new NgxRxdbError(\n        'collections must be initialized before importing dump'\n      );\n    }\n    for (const key in this.collections) {\n      if (dumpWithHashes.collections.hasOwnProperty(key)) {\n        dumpWithHashes.collections[key].schemaHash = this.collections[\n          key\n        ].schema['_hash'];\n      }\n    }\n    return dumpWithHashes;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 11.0.5\n        \n            @angular/common : 11.0.5\n        \n            @angular/compiler : 11.0.5\n        \n            @angular/core : 11.0.5\n        \n            @angular/forms : 11.0.5\n        \n            @angular/platform-browser : 11.0.5\n        \n            @angular/platform-browser-dynamic : 11.0.5\n        \n            @angular/router : 11.0.5\n        \n            @angular/service-worker : 11.0.5\n        \n            @ng-toolkit/pwa : 8.0.4\n        \n            @nrwl/angular : 11.0.13\n        \n            kinto : 14.0.2\n        \n            kinto-http : 5.1.1\n        \n            micro-dash : 8.1.0\n        \n            normalize.css : 8.0.1\n        \n            pouchdb-adapter-http : 7.2.2\n        \n            pouchdb-adapter-idb : 7.2.2\n        \n            pouchdb-adapter-memory : 7.2.2\n        \n            reflect-metadata : 0.1.13\n        \n            rxdb : 9.11.0\n        \n            rxjs : 6.6.3\n        \n            todomvc-app-css : 2.3.0\n        \n            todomvc-common : 1.0.5\n        \n            tslib : 2.0.3\n        \n            zone.js : 0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            countAllDocumentsFn   (libs/.../rxdb-collection.class.ts)\n                        \n                        \n                            dbInitializerFactory   (libs/.../rxdb.module.ts)\n                        \n                        \n                            idLengthFn   (libs/.../rxdb-collection.class.ts)\n                        \n                        \n                            isEmpty   (libs/.../utils.ts)\n                        \n                        \n                            logFn   (libs/.../utils.ts)\n                        \n                        \n                            noop   (libs/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/rxdb/src/lib/rxdb-collection.class.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            countAllDocumentsFn\n                        \n                        \n                    \n                \n            \n            \n                \ncountAllDocumentsFn()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            idLengthFn\n                        \n                        \n                    \n                \n            \n            \n                \nidLengthFn()\n                \n            \n\n\n\n\n        \n    \n    libs/rxdb/src/lib/rxdb.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            dbInitializerFactory\n                        \n                        \n                    \n                \n            \n            \n                \ndbInitializerFactory(rxdb, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rxdb\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/rxdb/src/lib/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmpty(object, deep)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    deep\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logFn\n                        \n                        \n                    \n                \n            \n            \n                \nlogFn(...args: any[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            noop\n                        \n                        \n                    \n                \n            \n            \n                \nnoop()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ngx-odm/rxdb\n\nAngular 10+ wrapper for RxDB - A realtime Database for the Web\n\nDemo\ndemo\nTable of contents\n\n@ngx-odm/rxdb\nDemo\nTable of contents\nGeneral info\nScreenshots\nTechnologies\nInstall\nUsage\nIn your AppModule\nIn your FeatureModule\nIn your FeatureService\nAOT\n\n\nFeatures\nStatus\nInspiration\nContact\n\n\n\nGeneral info\nIf you don't want to setup RxDB manually in your next Angular project - just import NgxRxdbModule\nScreenshots\n\nTechnologies\n\n\n\nRxDB\nAngular 10+\n\n\n\n\n\n\n\n\n\nInstall\nDescribe how to install / setup your local environement / add link to demo version.\nUsage\nIn your AppModule\n@NgModule({\n  imports: [\n    // ... other imports\n    // ...\n    NgxRxdbModule.forRoot({\n      // optional, NgxRxdbConfig extends RxDatabaseCreator, will be merged with default config\n      name: 'ngx',                        // In your FeatureModule\n\nSchemas define how your data looks. Which field should be used as primary, which fields should be used as indexes and what should be encrypted. The schema also validates that every inserted document of your collections conforms to the schema. Every collection has its own schema. With RxDB, schemas are defined with the jsonschema-standard which you might know from other projects.\nhttps://rxdb.info/rx-schema.html\n\n// create or import your schema\nconst todoSchema: RxSchema = require('../../../assets/data/todo.schema.json');\n// create config\n// NgxRxdbCollectionConfig extends RxCollectionCreator\nconst todoCollectionConfig: NgxRxdbCollectionConfig = {\n  name: 'todo',                           // In your FeatureService\n@Injectable()\nexport class TodosService {\n  // ...\n  filter$ = new BehaviorSubject('ALL');\n  constructor(private collectionService: NgxRxdbCollectionService) {}\n  // get documents from collection as observable using `RxQuery` mango-queries\n  selectTodos(): Observable {\n    return this.filter$.pipe(\n      switchMap(filterValue => {\n        const queryObj = {\n          selector: {\n            createdAt: {\n              $gt: null,\n            },\n            completed: filterValue === 'COMPLETED',\n          },\n          sort: [{ createdAt: 'desc' } as any],\n        };\n        return this.collectionService.docs(queryObj);\n      })\n    );\n  }\n\n  // add new document\n  add(name: string): void {\n    const payload: Todo = { guid: uuid(), name, done: false, dateCreated: Date.now() };\n    this.collectionService.insert(payload).subscribe(doc => console.log(doc));\n  }\n\n  // update prop od existing document\n  toggle(guid: string, done: boolean): void {\n    this.collectionService.update(guid, { done }).subscribe(doc => console.log(doc));\n  }\n\n  // use `pouchdb.bulkDocs` to delete all dcouments by qeury\n  removeDoneTodos(): void {\n    const rulesObject = { done: { $eq: true } };\n    this.collectionService.removeBulkBy(rulesObject).subscribe(res => this.changeFilter('ALL'));\n  }\n  // ...\n}AOT\nATM, set \"buildOptimizer\": false in your angular.json production configuration\nFeatures\nBy using this module you can\n\nAutomatically initialize db with settings, optionally provide db dumb to pre-fill with collections & documents\nAutomatically initialize RxCollection for each lazy-loaded Feature module with config\nWork straight with db.collection or via NgxRxdbCollectionService wrapper with some helper methods\n\nTo-do list:\n\nEnable sync\n...\n\nStatus\nProject is: in progress\nInspiration\nProject inspired by\n\nrxdb-angular2-example\nAngular NgRx Material Starter\nThe Angular Library Series from Angular In Depth\n\nContact\nCreated by @voznik - feel free to contact me!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxKintoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxRxdbFeatureModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxRxdbModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyObject   (libs/.../rxdb.interface.ts)\n                        \n                        \n                            AnyValue   (libs/.../rxdb.interface.ts)\n                        \n                        \n                            NgxKintoOptions   (libs/.../kinto.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/rxdb/src/lib/rxdb.interface.ts\n    \n    \n        \n            \n                \n                    \n                    AnyObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnyValue\n                \n            \n            \n                \n                        undefined | null | boolean | string | number | object | Date | any[]\n\n                \n            \n        \n    \n    libs/kinto/src/lib/services/kinto.service.ts\n    \n    \n        \n            \n                \n                    \n                    NgxKintoOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BACKOFF_FN   (libs/.../rxdb.model.ts)\n                        \n                        \n                            DEFAULT_COLLECTION_METHODS   (libs/.../rxdb-collection.class.ts)\n                        \n                        \n                            DEFAULT_INSTANCE_METHODS   (libs/.../rxdb-collection.class.ts)\n                        \n                        \n                            IMPORTED_FLAG   (libs/.../rxdb.service.ts)\n                        \n                        \n                            NGX_KINTO_OPTIONS   (libs/.../kinto.service.ts)\n                        \n                        \n                            RXDB_CONFIG   (libs/.../rxdb.token.ts)\n                        \n                        \n                            RXDB_DEFAULT_ADAPTER   (libs/.../rxdb.model.ts)\n                        \n                        \n                            RXDB_DEFAULT_CONFIG   (libs/.../rxdb.model.ts)\n                        \n                        \n                            RXDB_FEATURE_CONFIG   (libs/.../rxdb.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/rxdb/src/lib/rxdb.model.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BACKOFF_FN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : delay => (delay === 0 ? 2000 : delay * 3)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RXDB_DEFAULT_ADAPTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'idb'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RXDB_DEFAULT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxRxdbConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  name: 'ngx',\n  adapter: RXDB_DEFAULT_ADAPTER,\n  multiInstance: false,\n  ignoreDuplicate: true,\n  pouchSettings: {\n    skip_setup: true,\n    ajax: {\n      withCredentials: false,\n      cache: false,\n      timeout: 10000,\n      headers: {},\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    libs/rxdb/src/lib/rxdb-collection.class.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_COLLECTION_METHODS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  countAllDocuments: countAllDocumentsFn,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_INSTANCE_METHODS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  idLength: idLengthFn,\n}\n                        \n                    \n\n\n            \n        \n\n    libs/rxdb/src/lib/rxdb.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IMPORTED_FLAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '_ngx_rxdb_imported'\n                        \n                    \n\n\n            \n        \n\n    libs/kinto/src/lib/services/kinto.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_KINTO_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n  'NgxKintoOptions'\n)\n                        \n                    \n\n\n            \n        \n\n    libs/rxdb/src/lib/rxdb.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RXDB_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgxRxdbConfig')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RXDB_FEATURE_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n  'NgxRxdbCollectionConfig'\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rxdb.html":{"url":"additional-documentation/rxdb.html","title":"additional-page - rxdb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n@ngx-odm/rxdb\n\nAngular 10+ wrapper for RxDB - A realtime Database for the Web\n\nDemo\ndemo\nTable of contents\n\n@ngx-odm/rxdb\nDemo\nTable of contents\nGeneral info\nScreenshots\nTechnologies\nInstall\nUsage\nIn your AppModule\nIn your FeatureModule\nIn your FeatureService\nAOT\n\n\nFeatures\nStatus\nInspiration\nContact\n\n\n\nGeneral info\nIf you don't want to setup RxDB manually in your next Angular project - just import NgxRxdbModule\nScreenshots\n\nTechnologies\n\n\n\nRxDB\nAngular 10+\n\n\n\n\n\n\n\n\n\nInstall\nDescribe how to install / setup your local environement / add link to demo version.\nUsage\nIn your AppModule\n@NgModule({\n  imports: [\n    // ... other imports\n    // ...\n    NgxRxdbModule.forRoot({\n      // optional, NgxRxdbConfig extends RxDatabaseCreator, will be merged with default config\n      name: 'ngx',                        // In your FeatureModule\n\nSchemas define how your data looks. Which field should be used as primary, which fields should be used as indexes and what should be encrypted. The schema also validates that every inserted document of your collections conforms to the schema. Every collection has its own schema. With RxDB, schemas are defined with the jsonschema-standard which you might know from other projects.\nhttps://rxdb.info/rx-schema.html\n\n// create or import your schema\nconst todoSchema: RxSchema = require('../../../assets/data/todo.schema.json');\n// create config\n// NgxRxdbCollectionConfig extends RxCollectionCreator\nconst todoCollectionConfig: NgxRxdbCollectionConfig = {\n  name: 'todo',                           // In your FeatureService\n@Injectable()\nexport class TodosService {\n  // ...\n  filter$ = new BehaviorSubject('ALL');\n  constructor(private collectionService: NgxRxdbCollectionService) {}\n  // get documents from collection as observable using `RxQuery` mango-queries\n  selectTodos(): Observable {\n    return this.filter$.pipe(\n      switchMap(filterValue => {\n        const queryObj = {\n          selector: {\n            createdAt: {\n              $gt: null,\n            },\n            completed: filterValue === 'COMPLETED',\n          },\n          sort: [{ createdAt: 'desc' } as any],\n        };\n        return this.collectionService.docs(queryObj);\n      })\n    );\n  }\n\n  // add new document\n  add(name: string): void {\n    const payload: Todo = { guid: uuid(), name, done: false, dateCreated: Date.now() };\n    this.collectionService.insert(payload).subscribe(doc => console.log(doc));\n  }\n\n  // update prop od existing document\n  toggle(guid: string, done: boolean): void {\n    this.collectionService.update(guid, { done }).subscribe(doc => console.log(doc));\n  }\n\n  // use `pouchdb.bulkDocs` to delete all dcouments by qeury\n  removeDoneTodos(): void {\n    const rulesObject = { done: { $eq: true } };\n    this.collectionService.removeBulkBy(rulesObject).subscribe(res => this.changeFilter('ALL'));\n  }\n  // ...\n}AOT\nATM, set \"buildOptimizer\": false in your angular.json production configuration\nFeatures\nBy using this module you can\n\nAutomatically initialize db with settings, optionally provide db dumb to pre-fill with collections & documents\nAutomatically initialize RxCollection for each lazy-loaded Feature module with config\nWork straight with db.collection or via NgxRxdbCollectionService wrapper with some helper methods\n\nTo-do list:\n\nEnable sync\n...\n\nStatus\nProject is: in progress\nInspiration\nProject inspired by\n\nrxdb-angular2-example\nAngular NgRx Material Starter\nThe Angular Library Series from Angular In Depth\n\nContact\nCreated by @voznik - feel free to contact me!\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/kinto.html":{"url":"additional-documentation/kinto.html","title":"additional-page - kinto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nngx-kinto\nThis library was generated with Nx.\nRunning unit tests\nRun nx test ngx-kinto to execute the unit tests.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
